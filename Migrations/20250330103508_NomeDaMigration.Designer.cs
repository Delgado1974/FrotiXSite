// <auto-generated />
using System;
using FrotiX.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FrotiX.Migrations
{
    [DbContext(typeof(FrotiXDbContext))]
    [Migration("20250330103508_NomeDaMigration")]
    partial class NomeDaMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FrotiX.Models.Abastecimento", b =>
                {
                    b.Property<Guid>("AbastecimentoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CombustivelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DataHora")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Hodometro")
                        .HasColumnType("int");

                    b.Property<int?>("KmRodado")
                        .HasColumnType("int");

                    b.Property<double?>("Litros")
                        .HasColumnType("float");

                    b.Property<Guid?>("MotoristaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("ValorUnitario")
                        .HasColumnType("float");

                    b.Property<Guid?>("VeiculoId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("AbastecimentoId");

                    b.HasIndex("CombustivelId");

                    b.HasIndex("MotoristaId");

                    b.HasIndex("VeiculoId");

                    b.ToTable("Abastecimento");
                });

            modelBuilder.Entity("FrotiX.Models.AspNetUsers", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Criacao")
                        .HasColumnType("datetime2");

                    b.Property<bool>("DetentorCargaPatrimonial")
                        .HasColumnType("bit");

                    b.Property<string>("Discriminator")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<byte[]>("Foto")
                        .HasColumnType("varbinary(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NomeCompleto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("Ponto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Ramal")
                        .HasColumnType("int");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UltimoLogin")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioIdAlteracao")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("FrotiX.Models.AtaRegistroPrecos", b =>
                {
                    b.Property<Guid>("AtaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AnoAta")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AnoProcesso")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataFim")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("FornecedorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("NumeroAta")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroProcesso")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Objeto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<double>("Valor")
                        .HasColumnType("float");

                    b.HasKey("AtaId");

                    b.HasIndex("FornecedorId");

                    b.ToTable("AtaRegistroPrecos");
                });

            modelBuilder.Entity("FrotiX.Models.Cadastros.SecaoPatrimonial", b =>
                {
                    b.Property<Guid>("SecaoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("NomeSecao")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("SetorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("SecaoId");

                    b.HasIndex("SetorId");

                    b.ToTable("SecaoPatrimonial");
                });

            modelBuilder.Entity("FrotiX.Models.Cadastros.SetorPatrimonial", b =>
                {
                    b.Property<Guid>("SetorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DetentorId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomeSetor")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("SetorId");

                    b.ToTable("SetorPatrimonial");
                });

            modelBuilder.Entity("FrotiX.Models.Combustivel", b =>
                {
                    b.Property<Guid>("CombustivelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("CombustivelId");

                    b.ToTable("Combustivel");
                });

            modelBuilder.Entity("FrotiX.Models.Contrato", b =>
                {
                    b.Property<Guid>("ContratoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AnoContrato")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AnoProcesso")
                        .HasColumnType("int");

                    b.Property<bool>("ContratoEncarregados")
                        .HasColumnType("bit");

                    b.Property<bool>("ContratoLavadores")
                        .HasColumnType("bit");

                    b.Property<bool>("ContratoMotoristas")
                        .HasColumnType("bit");

                    b.Property<bool>("ContratoOperadores")
                        .HasColumnType("bit");

                    b.Property<double?>("CustoMensalEncarregado")
                        .HasColumnType("float");

                    b.Property<double?>("CustoMensalLavador")
                        .HasColumnType("float");

                    b.Property<double?>("CustoMensalMotorista")
                        .HasColumnType("float");

                    b.Property<double?>("CustoMensalOperador")
                        .HasColumnType("float");

                    b.Property<DateTime>("DataFim")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataRepactuacao")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("FornecedorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("NumeroContrato")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroProcesso")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Objeto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Prorrogacao")
                        .HasColumnType("int");

                    b.Property<int?>("QuantidadeEncarregado")
                        .HasColumnType("int");

                    b.Property<int?>("QuantidadeLavador")
                        .HasColumnType("int");

                    b.Property<int?>("QuantidadeMotorista")
                        .HasColumnType("int");

                    b.Property<int?>("QuantidadeOperador")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("TipoContrato")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Valor")
                        .HasColumnType("float");

                    b.Property<int>("Vigencia")
                        .HasColumnType("int");

                    b.HasKey("ContratoId");

                    b.HasIndex("FornecedorId");

                    b.ToTable("Contrato");
                });

            modelBuilder.Entity("FrotiX.Models.ControleAcesso", b =>
                {
                    b.Property<string>("UsuarioId")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnOrder(0);

                    b.Property<Guid>("RecursoId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(1);

                    b.Property<bool>("Acesso")
                        .HasColumnType("bit");

                    b.HasKey("UsuarioId", "RecursoId");

                    b.ToTable("ControleAcesso");
                });

            modelBuilder.Entity("FrotiX.Models.CorridasCanceladasTaxiLeg", b =>
                {
                    b.Property<Guid>("CorridaCanceladaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DataAgenda")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataHoraCancelamento")
                        .HasColumnType("datetime2");

                    b.Property<string>("HoraAgenda")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HoraCancelamento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MotivoCancelamento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MotivoUso")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Origem")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("QtdPassageiros")
                        .HasColumnType("int");

                    b.Property<string>("Setor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SetorExtra")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TempoEspera")
                        .HasColumnType("int");

                    b.Property<string>("TipoCancelamento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Unidade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UnidadeExtra")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CorridaCanceladaId");

                    b.ToTable("CorridasCanceladasTaxiLeg");
                });

            modelBuilder.Entity("FrotiX.Models.CorridasTaxiLeg", b =>
                {
                    b.Property<Guid>("CorridaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Avaliacao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DataAgenda")
                        .HasColumnType("datetime2");

                    b.Property<string>("DescSetor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DescUnidade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Duracao")
                        .HasColumnType("int");

                    b.Property<int?>("Espera")
                        .HasColumnType("int");

                    b.Property<string>("HoraAceite")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HoraAgenda")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HoraFinal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HoraInicio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HoraLocal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("KmReal")
                        .HasColumnType("float");

                    b.Property<string>("MotivoUso")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Origem")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("QtdEstrelas")
                        .HasColumnType("int");

                    b.Property<int?>("QtdPassageiros")
                        .HasColumnType("int");

                    b.Property<string>("Setor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Unidade")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CorridaId");

                    b.ToTable("CorridasTaxiLeg");
                });

            modelBuilder.Entity("FrotiX.Models.CustoMensalItensContrato", b =>
                {
                    b.Property<Guid>("NotaFiscalId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<int>("Ano")
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    b.Property<int>("Mes")
                        .HasColumnType("int")
                        .HasColumnOrder(2);

                    b.Property<double?>("CustoMensalLavador")
                        .HasColumnType("float");

                    b.Property<double?>("CustoMensalMotorista")
                        .HasColumnType("float");

                    b.Property<double?>("CustoMensalOperador")
                        .HasColumnType("float");

                    b.HasKey("NotaFiscalId", "Ano", "Mes");

                    b.ToTable("CustoMensalItensContrato");
                });

            modelBuilder.Entity("FrotiX.Models.Empenho", b =>
                {
                    b.Property<Guid>("EmpenhoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AnoVigencia")
                        .HasColumnType("int");

                    b.Property<Guid?>("AtaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ContratoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataEmissao")
                        .HasColumnType("datetime2");

                    b.Property<string>("NotaEmpenho")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<double?>("SaldoFinal")
                        .HasColumnType("float");

                    b.Property<double>("SaldoInicial")
                        .HasColumnType("float");

                    b.Property<DateTime>("VigenciaFinal")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("VigenciaInicial")
                        .HasColumnType("datetime2");

                    b.HasKey("EmpenhoId");

                    b.HasIndex("AtaId");

                    b.HasIndex("ContratoId");

                    b.ToTable("Empenho");
                });

            modelBuilder.Entity("FrotiX.Models.EmpenhoMulta", b =>
                {
                    b.Property<Guid>("EmpenhoMultaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AnoVigencia")
                        .HasColumnType("int");

                    b.Property<string>("NotaEmpenho")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<Guid?>("OrgaoAutuanteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("SaldoAtual")
                        .HasColumnType("float");

                    b.Property<double>("SaldoInicial")
                        .HasColumnType("float");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("EmpenhoMultaId");

                    b.HasIndex("OrgaoAutuanteId");

                    b.ToTable("EmpenhoMulta");
                });

            modelBuilder.Entity("FrotiX.Models.Evento", b =>
                {
                    b.Property<Guid>("EventoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataFinal")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataInicial")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("QtdParticipantes")
                        .HasColumnType("int");

                    b.Property<Guid>("RequisitanteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SetorSolicitanteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EventoId");

                    b.HasIndex("RequisitanteId");

                    b.HasIndex("SetorSolicitanteId");

                    b.ToTable("Evento");
                });

            modelBuilder.Entity("FrotiX.Models.Fornecedor", b =>
                {
                    b.Property<Guid>("FornecedorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CNPJ")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Contato01")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Contato02")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DescricaoFornecedor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Endereco")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("Telefone01")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefone02")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FornecedorId");

                    b.ToTable("Fornecedor");
                });

            modelBuilder.Entity("FrotiX.Models.ItemVeiculoAta", b =>
                {
                    b.Property<Guid>("ItemVeiculoAtaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NumItem")
                        .HasColumnType("int");

                    b.Property<int?>("Quantidade")
                        .HasColumnType("int");

                    b.Property<Guid>("RepactuacaoAtaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("ValorUnitario")
                        .HasColumnType("float");

                    b.HasKey("ItemVeiculoAtaId");

                    b.HasIndex("RepactuacaoAtaId");

                    b.ToTable("ItemVeiculoAta");
                });

            modelBuilder.Entity("FrotiX.Models.ItemVeiculoContrato", b =>
                {
                    b.Property<Guid>("ItemVeiculoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NumItem")
                        .HasColumnType("int");

                    b.Property<int?>("Quantidade")
                        .HasColumnType("int");

                    b.Property<Guid>("RepactuacaoContratoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("ValorUnitario")
                        .HasColumnType("float");

                    b.HasKey("ItemVeiculoId");

                    b.HasIndex("RepactuacaoContratoId");

                    b.ToTable("ItemVeiculoContrato");
                });

            modelBuilder.Entity("FrotiX.Models.ItensManutencao", b =>
                {
                    b.Property<Guid>("ItemManutencaoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DataItem")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImagemOcorrencia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ManutencaoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("MotoristaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("NumFicha")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Resumo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipoItem")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ViagemId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ItemManutencaoId");

                    b.HasIndex("ManutencaoId");

                    b.HasIndex("MotoristaId");

                    b.HasIndex("ViagemId");

                    b.ToTable("ItensManutencao");
                });

            modelBuilder.Entity("FrotiX.Models.Lavador", b =>
                {
                    b.Property<Guid>("LavadorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Celular01")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Celular02")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ContratoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataAlteracao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataIngresso")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("Foto")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Ponto")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("UsuarioIdAlteracao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LavadorId");

                    b.HasIndex("ContratoId");

                    b.ToTable("Lavador");
                });

            modelBuilder.Entity("FrotiX.Models.LavadorContrato", b =>
                {
                    b.Property<Guid>("LavadorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<Guid>("ContratoId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(1);

                    b.HasKey("LavadorId", "ContratoId");

                    b.ToTable("LavadorContrato");
                });

            modelBuilder.Entity("FrotiX.Models.LavadoresLavagem", b =>
                {
                    b.Property<Guid>("LavagemId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<Guid>("LavadorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(1);

                    b.HasKey("LavagemId", "LavadorId");

                    b.HasIndex("LavadorId");

                    b.ToTable("LavadoresLavagem");
                });

            modelBuilder.Entity("FrotiX.Models.Lavagem", b =>
                {
                    b.Property<Guid>("LavagemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Data")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Horario")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("MotoristaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("VeiculoId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("LavagemId");

                    b.HasIndex("MotoristaId");

                    b.HasIndex("VeiculoId");

                    b.ToTable("Lavagem");
                });

            modelBuilder.Entity("FrotiX.Models.LotacaoMotorista", b =>
                {
                    b.Property<Guid>("LotacaoMotoristaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DataFim")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Lotado")
                        .HasColumnType("bit");

                    b.Property<string>("Motivo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("MotoristaCoberturaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("MotoristaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UnidadeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("LotacaoMotoristaId");

                    b.ToTable("LotacaoMotorista");
                });

            modelBuilder.Entity("FrotiX.Models.Manutencao", b =>
                {
                    b.Property<Guid>("ManutencaoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DataDevolucao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataDevolucaoReserva")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataEntrega")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataRecebimentoReserva")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataRecolhimento")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataSolicitacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("IdUsuarioAlteracao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("ManutencaoPreventiva")
                        .HasColumnType("bit");

                    b.Property<string>("NumOS")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("QuilometragemManutencao")
                        .HasColumnType("int");

                    b.Property<bool?>("ReservaEnviado")
                        .HasColumnType("bit");

                    b.Property<string>("ResumoOS")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("StatusOS")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("VeiculoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("VeiculoReservaId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ManutencaoId");

                    b.HasIndex("VeiculoId");

                    b.HasIndex("VeiculoReservaId");

                    b.ToTable("Manutencao");
                });

            modelBuilder.Entity("FrotiX.Models.MarcaVeiculo", b =>
                {
                    b.Property<Guid>("MarcaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DescricaoMarca")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("MarcaId");

                    b.ToTable("MarcaVeiculo");
                });

            modelBuilder.Entity("FrotiX.Models.MediaCombustivel", b =>
                {
                    b.Property<Guid>("NotaFiscalId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<Guid>("CombustivelId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(1);

                    b.Property<int>("Ano")
                        .HasColumnType("int")
                        .HasColumnOrder(2);

                    b.Property<int>("Mes")
                        .HasColumnType("int")
                        .HasColumnOrder(3);

                    b.Property<double>("PrecoMedio")
                        .HasColumnType("float");

                    b.HasKey("NotaFiscalId", "CombustivelId", "Ano", "Mes");

                    b.ToTable("MediaCombustivel");
                });

            modelBuilder.Entity("FrotiX.Models.ModeloVeiculo", b =>
                {
                    b.Property<Guid>("ModeloId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DescricaoModelo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("MarcaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("ModeloId");

                    b.HasIndex("MarcaId");

                    b.ToTable("ModeloVeiculo");
                });

            modelBuilder.Entity("FrotiX.Models.Motorista", b =>
                {
                    b.Property<Guid>("MotoristaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CNH")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<byte[]>("CNHDigital")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CategoriaCNH")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Celular01")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Celular02")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ContratoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataAlteracao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataIngresso")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataVencimentoCNH")
                        .HasColumnType("datetime2");

                    b.Property<string>("EfetivoFerista")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Foto")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("OrigemIndicacao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ponto")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("TipoCondutor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("UnidadeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UsuarioIdAlteracao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MotoristaId");

                    b.HasIndex("ContratoId");

                    b.HasIndex("UnidadeId");

                    b.ToTable("Motorista");
                });

            modelBuilder.Entity("FrotiX.Models.MotoristaContrato", b =>
                {
                    b.Property<Guid>("MotoristaId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<Guid>("ContratoId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(1);

                    b.HasKey("MotoristaId", "ContratoId");

                    b.ToTable("MotoristaContrato");
                });

            modelBuilder.Entity("FrotiX.Models.MovimentacaoEmpenho", b =>
                {
                    b.Property<Guid>("MovimentacaoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataMovimentacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("EmpenhoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TipoMovimentacao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Valor")
                        .HasColumnType("float");

                    b.HasKey("MovimentacaoId");

                    b.HasIndex("EmpenhoId");

                    b.ToTable("MovimentacaoEmpenho");
                });

            modelBuilder.Entity("FrotiX.Models.MovimentacaoEmpenhoMulta", b =>
                {
                    b.Property<Guid>("MovimentacaoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DataMovimentacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("EmpenhoMultaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MultaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TipoMovimentacao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Valor")
                        .HasColumnType("float");

                    b.HasKey("MovimentacaoId");

                    b.HasIndex("EmpenhoMultaId");

                    b.HasIndex("MultaId");

                    b.ToTable("MovimentacaoEmpenhoMulta");
                });

            modelBuilder.Entity("FrotiX.Models.MovimentacaoPatrimonio", b =>
                {
                    b.Property<Guid>("MovimentacaoPatrimonioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DataMovimentacao")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("PatrimonioId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ResponsavelMovimentacao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("SecaoDestinoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SecaoOrigemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SetorDestinoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SetorOrigemId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("MovimentacaoPatrimonioId");

                    b.ToTable("MovimentacaoPatrimonio");
                });

            modelBuilder.Entity("FrotiX.Models.Multa", b =>
                {
                    b.Property<Guid>("MultaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AtaVeiculoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AutuacaoPDF")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ComprovantePDF")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ContratoMotoristaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ContratoVeiculoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataLimite")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataNotificacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataPagamento")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("EmpenhoMultaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("EnviadaSecle")
                        .HasColumnType("bit");

                    b.Property<string>("Fase")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FormaPagamento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Hora")
                        .HasColumnType("datetime2");

                    b.Property<string>("Localizacao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("MotoristaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("NoFichaVistoria")
                        .HasColumnType("int");

                    b.Property<string>("NumInfracao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Observacao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("OrgaoAutuanteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("OutrosDocumentosPDF")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Paga")
                        .HasColumnType("bit");

                    b.Property<string>("PenalidadePDF")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProcessoEDoc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProcessoEdocPDF")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("TipoMultaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("ValorAteVencimento")
                        .HasColumnType("float");

                    b.Property<double?>("ValorPago")
                        .HasColumnType("float");

                    b.Property<double>("ValorPosVencimento")
                        .HasColumnType("float");

                    b.Property<Guid?>("VeiculoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Vencimento")
                        .HasColumnType("datetime2");

                    b.HasKey("MultaId");

                    b.HasIndex("EmpenhoMultaId");

                    b.HasIndex("MotoristaId");

                    b.HasIndex("OrgaoAutuanteId");

                    b.HasIndex("TipoMultaId");

                    b.HasIndex("VeiculoId");

                    b.ToTable("Multa");
                });

            modelBuilder.Entity("FrotiX.Models.NotaFiscal", b =>
                {
                    b.Property<Guid>("NotaFiscalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AnoReferencia")
                        .HasColumnType("int");

                    b.Property<Guid?>("AtaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ContratoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataEmissao")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("EmpenhoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("MesReferencia")
                        .HasColumnType("int");

                    b.Property<string>("MotivoGlosa")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("NumeroNF")
                        .HasColumnType("int");

                    b.Property<string>("Objeto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipoNF")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("ValorGlosa")
                        .HasColumnType("float");

                    b.Property<double>("ValorNF")
                        .HasColumnType("float");

                    b.Property<Guid?>("VeiculoId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("NotaFiscalId");

                    b.HasIndex("ContratoId");

                    b.HasIndex("EmpenhoId");

                    b.HasIndex("VeiculoId");

                    b.ToTable("NotaFiscal");
                });

            modelBuilder.Entity("FrotiX.Models.Operador", b =>
                {
                    b.Property<Guid>("OperadorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Celular01")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Celular02")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ContratoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataAlteracao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataIngresso")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("Foto")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Ponto")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("UsuarioIdAlteracao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("OperadorId");

                    b.HasIndex("ContratoId");

                    b.ToTable("Operador");
                });

            modelBuilder.Entity("FrotiX.Models.OperadorContrato", b =>
                {
                    b.Property<Guid>("OperadorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<Guid>("ContratoId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(1);

                    b.HasKey("OperadorId", "ContratoId");

                    b.ToTable("OperadorContrato");
                });

            modelBuilder.Entity("FrotiX.Models.OrgaoAutuante", b =>
                {
                    b.Property<Guid>("OrgaoAutuanteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Sigla")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("OrgaoAutuanteId");

                    b.ToTable("OrgaoAutuante");
                });

            modelBuilder.Entity("FrotiX.Models.Patrimonio", b =>
                {
                    b.Property<Guid>("PatrimonioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descricao")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LocalizacaoAtual")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Marca")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Modelo")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("NPR")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("NumeroSerie")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<Guid>("SecaoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SetorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Situacao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("PatrimonioId");

                    b.HasIndex("SecaoId");

                    b.HasIndex("SetorId");

                    b.ToTable("Patrimonio");
                });

            modelBuilder.Entity("FrotiX.Models.PlacaBronze", b =>
                {
                    b.Property<Guid>("PlacaBronzeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DescricaoPlaca")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("PlacaBronzeId");

                    b.ToTable("PlacaBronze");
                });

            modelBuilder.Entity("FrotiX.Models.Recurso", b =>
                {
                    b.Property<Guid>("RecursoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomeMenu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Ordem")
                        .HasColumnType("float");

                    b.HasKey("RecursoId");

                    b.ToTable("Recurso");
                });

            modelBuilder.Entity("FrotiX.Models.RegistroCupomAbastecimento", b =>
                {
                    b.Property<Guid>("RegistroCupomId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataRegistro")
                        .HasColumnType("datetime2");

                    b.Property<string>("Observacoes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegistroPDF")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RegistroCupomId");

                    b.ToTable("RegistroCupomAbastecimento");
                });

            modelBuilder.Entity("FrotiX.Models.RepactuacaoAta", b =>
                {
                    b.Property<Guid>("RepactuacaoAtaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AtaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DataRepactuacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RepactuacaoAtaId");

                    b.HasIndex("AtaId");

                    b.ToTable("RepactuacaoAta");
                });

            modelBuilder.Entity("FrotiX.Models.RepactuacaoContrato", b =>
                {
                    b.Property<Guid>("RepactuacaoContratoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ContratoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DataRepactuacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Prorrogacao")
                        .HasColumnType("int");

                    b.Property<double?>("Valor")
                        .HasColumnType("float");

                    b.Property<int?>("Vigencia")
                        .HasColumnType("int");

                    b.HasKey("RepactuacaoContratoId");

                    b.HasIndex("ContratoId");

                    b.ToTable("RepactuacaoContrato");
                });

            modelBuilder.Entity("FrotiX.Models.RepactuacaoServicos", b =>
                {
                    b.Property<Guid>("RepactuacaoServicoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DataRepactuacao")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("RepactuacaoContratoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("Valor")
                        .HasColumnType("float");

                    b.HasKey("RepactuacaoServicoId");

                    b.HasIndex("RepactuacaoContratoId");

                    b.ToTable("RepactuacaoServicos");
                });

            modelBuilder.Entity("FrotiX.Models.RepactuacaoTerceirizacao", b =>
                {
                    b.Property<Guid>("RepactuacaoTerceirizacaoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DataRepactuacao")
                        .HasColumnType("datetime2");

                    b.Property<int?>("QtdEncarregados")
                        .HasColumnType("int");

                    b.Property<int?>("QtdLavadores")
                        .HasColumnType("int");

                    b.Property<int?>("QtdMotoristas")
                        .HasColumnType("int");

                    b.Property<int?>("QtdOperadores")
                        .HasColumnType("int");

                    b.Property<Guid>("RepactuacaoContratoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("ValorEncarregado")
                        .HasColumnType("float");

                    b.Property<double?>("ValorLavador")
                        .HasColumnType("float");

                    b.Property<double?>("ValorMotorista")
                        .HasColumnType("float");

                    b.Property<double?>("ValorOperador")
                        .HasColumnType("float");

                    b.HasKey("RepactuacaoTerceirizacaoId");

                    b.HasIndex("RepactuacaoContratoId");

                    b.ToTable("RepactuacaoTerceirizacao");
                });

            modelBuilder.Entity("FrotiX.Models.Requisitante", b =>
                {
                    b.Property<Guid>("RequisitanteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataAlteracao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ponto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Ramal")
                        .HasColumnType("int");

                    b.Property<Guid>("SetorSolicitanteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("UsuarioIdAlteracao")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RequisitanteId");

                    b.HasIndex("SetorSolicitanteId");

                    b.ToTable("Requisitante");
                });

            modelBuilder.Entity("FrotiX.Models.SetorSolicitante", b =>
                {
                    b.Property<Guid>("SetorSolicitanteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataAlteracao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Ramal")
                        .HasColumnType("int");

                    b.Property<Guid?>("SetorPaiId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Sigla")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("UsuarioIdAlteracao")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SetorSolicitanteId");

                    b.ToTable("SetorSolicitante");
                });

            modelBuilder.Entity("FrotiX.Models.TipoMulta", b =>
                {
                    b.Property<Guid>("TipoMultaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Artigo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CodigoDenatran")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Desdobramento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Infracao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TipoMultaId");

                    b.ToTable("TipoMulta");
                });

            modelBuilder.Entity("FrotiX.Models.Unidade", b =>
                {
                    b.Property<Guid>("UnidadeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Categoria")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PontoPrimeiroContato")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PontoSegundoContato")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PontoTerceiroContato")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PrimeiroContato")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<long>("PrimeiroRamal")
                        .HasColumnType("bigint");

                    b.Property<int?>("QtdMotoristas")
                        .HasColumnType("int");

                    b.Property<string>("SegundoContato")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<long?>("SegundoRamal")
                        .HasColumnType("bigint");

                    b.Property<string>("Sigla")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("TerceiroContato")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<long?>("TerceiroRamal")
                        .HasColumnType("bigint");

                    b.HasKey("UnidadeId");

                    b.ToTable("Unidade");
                });

            modelBuilder.Entity("FrotiX.Models.Veiculo", b =>
                {
                    b.Property<Guid>("VeiculoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("AnoFabricacao")
                        .HasColumnType("int");

                    b.Property<int?>("AnoModelo")
                        .HasColumnType("int");

                    b.Property<Guid?>("AtaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte[]>("CRLV")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Categoria")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CombustivelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ContratoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataAlteracao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataIngresso")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Economildo")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ItemVeiculoAtaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ItemVeiculoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("MarcaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ModeloId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Patrimonio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Placa")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<Guid?>("PlacaBronzeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PlacaVinculada")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("Quilometragem")
                        .HasColumnType("int");

                    b.Property<string>("Renavam")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("Reserva")
                        .HasColumnType("bit");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<Guid?>("UnidadeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UsuarioIdAlteracao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("ValorMensal")
                        .HasColumnType("float");

                    b.Property<bool>("VeiculoProprio")
                        .HasColumnType("bit");

                    b.HasKey("VeiculoId");

                    b.HasIndex("AtaId");

                    b.HasIndex("CombustivelId");

                    b.HasIndex("ItemVeiculoAtaId");

                    b.HasIndex("ItemVeiculoId");

                    b.HasIndex("MarcaId");

                    b.HasIndex("ModeloId");

                    b.HasIndex("PlacaBronzeId");

                    b.HasIndex("UnidadeId");

                    b.ToTable("Veiculo");
                });

            modelBuilder.Entity("FrotiX.Models.VeiculoAta", b =>
                {
                    b.Property<Guid>("VeiculoId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<Guid>("AtaId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(1);

                    b.HasKey("VeiculoId", "AtaId");

                    b.ToTable("VeiculoAta");
                });

            modelBuilder.Entity("FrotiX.Models.VeiculoContrato", b =>
                {
                    b.Property<Guid>("VeiculoId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<Guid>("ContratoId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(1);

                    b.HasKey("VeiculoId", "ContratoId");

                    b.ToTable("VeiculoContrato");
                });

            modelBuilder.Entity("FrotiX.Models.Viagem", b =>
                {
                    b.Property<Guid>("ViagemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CombustivelFinal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CombustivelInicial")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("CustoCombustivel")
                        .HasColumnType("float");

                    b.Property<double?>("CustoLavador")
                        .HasColumnType("float");

                    b.Property<double?>("CustoMotorista")
                        .HasColumnType("float");

                    b.Property<double?>("CustoOperador")
                        .HasColumnType("float");

                    b.Property<double?>("CustoVeiculo")
                        .HasColumnType("float");

                    b.Property<DateTime?>("DataAgendamento")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataFinal")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataFinalRecorrencia")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataFinalizacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataInicial")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DescricaoOcorrencia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DescricaoSemFormato")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DescricaoSolucaoOcorrencia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Destino")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DiaMesRecorrencia")
                        .HasColumnType("int");

                    b.Property<Guid?>("EventoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte[]>("FichaVistoria")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Finalidade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("FoiAgendamento")
                        .HasColumnType("bit");

                    b.Property<bool?>("Friday")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("HoraFim")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("HoraInicio")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImagemOcorrencia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Intervalo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ItemManutencaoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("KmAtual")
                        .HasColumnType("int");

                    b.Property<int?>("KmFinal")
                        .HasColumnType("int");

                    b.Property<int?>("KmInicial")
                        .HasColumnType("int");

                    b.Property<int?>("Minutos")
                        .HasColumnType("int");

                    b.Property<bool?>("Monday")
                        .HasColumnType("bit");

                    b.Property<Guid?>("MotoristaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("NoFichaVistoria")
                        .HasColumnType("int");

                    b.Property<string>("NomeEvento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Origem")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RamalRequisitante")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("RecorrenciaViagemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Recorrente")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("RequisitanteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ResumoOcorrencia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Saturday")
                        .HasColumnType("bit");

                    b.Property<Guid?>("SetorSolicitanteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("StatusAgendamento")
                        .HasColumnType("bit");

                    b.Property<string>("StatusCartaoAbastecimento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusDocumento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusOcorrencia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Sunday")
                        .HasColumnType("bit");

                    b.Property<bool?>("Thursday")
                        .HasColumnType("bit");

                    b.Property<bool?>("Tuesday")
                        .HasColumnType("bit");

                    b.Property<string>("UsuarioIdAgendamento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioIdCriacao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioIdFinalizacao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("VeiculoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("Wednesday")
                        .HasColumnType("bit");

                    b.HasKey("ViagemId");

                    b.HasIndex("EventoId");

                    b.HasIndex("ItemManutencaoId")
                        .IsUnique()
                        .HasFilter("[ItemManutencaoId] IS NOT NULL");

                    b.HasIndex("MotoristaId");

                    b.HasIndex("RequisitanteId");

                    b.HasIndex("SetorSolicitanteId");

                    b.HasIndex("VeiculoId");

                    b.ToTable("Viagem");
                });

            modelBuilder.Entity("FrotiX.Models.ViagensEconomildo", b =>
                {
                    b.Property<Guid>("ViagemEconomildoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Data")
                        .HasColumnType("datetime2");

                    b.Property<string>("HoraFim")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HoraInicio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdaVolta")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MOB")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("MotoristaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("QtdPassageiros")
                        .HasColumnType("int");

                    b.Property<string>("Responsavel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("VeiculoId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ViagemEconomildoId");

                    b.HasIndex("MotoristaId");

                    b.HasIndex("VeiculoId");

                    b.ToTable("ViagensEconomildo");
                });

            modelBuilder.Entity("FrotiX.Models.ViewAbastecimentos", b =>
                {
                    b.Property<Guid?>("AbastecimentoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CombustivelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Consumo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("ConsumoGeral")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Data")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DataHora")
                        .HasColumnType("datetime2");

                    b.Property<string>("Hora")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("KmRodado")
                        .HasColumnType("int");

                    b.Property<string>("Litros")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MotoristaCondutor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("MotoristaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Placa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sigla")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipoCombustivel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipoVeiculo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("UnidadeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ValorTotal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ValorUnitario")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("VeiculoId")
                        .HasColumnType("uniqueidentifier");

                    b.ToTable("ViewAbastecimentos");
                });

            modelBuilder.Entity("FrotiX.Models.ViewAtaFornecedor", b =>
                {
                    b.Property<Guid>("AtaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AtaVeiculo")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("ViewAtaFornecedor");
                });

            modelBuilder.Entity("FrotiX.Models.ViewContratoFornecedor", b =>
                {
                    b.Property<Guid>("ContratoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipoContrato")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("ViewContratoFornecedor");
                });

            modelBuilder.Entity("FrotiX.Models.ViewControleAcesso", b =>
                {
                    b.Property<bool?>("Acesso")
                        .HasColumnType("bit");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IDS")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomeCompleto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Ordem")
                        .HasColumnType("float");

                    b.Property<Guid?>("RecursoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UsuarioId")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("ViewControleAcesso");
                });

            modelBuilder.Entity("FrotiX.Models.ViewCustosViagem", b =>
                {
                    b.Property<string>("CustoCombustivel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustoMotorista")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustoVeiculo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DataFinal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DataInicial")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DescricaoVeiculo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Finalidade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HoraFim")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HoraInicio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("KmFinal")
                        .HasColumnType("int");

                    b.Property<int?>("KmInicial")
                        .HasColumnType("int");

                    b.Property<Guid?>("MotoristaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("NoFichaVistoria")
                        .HasColumnType("int");

                    b.Property<string>("NomeMotorista")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Quilometragem")
                        .HasColumnType("int");

                    b.Property<long?>("RowNum")
                        .HasColumnType("bigint");

                    b.Property<Guid?>("SetorSolicitanteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("StatusAgendamento")
                        .HasColumnType("bit");

                    b.Property<Guid?>("VeiculoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ViagemId")
                        .HasColumnType("uniqueidentifier");

                    b.ToTable("ViewCustosViagem");
                });

            modelBuilder.Entity("FrotiX.Models.ViewEmpenhoMulta", b =>
                {
                    b.Property<int?>("AnoVigencia")
                        .HasColumnType("int");

                    b.Property<Guid>("EmpenhoMultaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Movimentacoes")
                        .HasColumnType("int");

                    b.Property<string>("NotaEmpenho")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("OrgaoAutuanteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("SaldoAtual")
                        .HasColumnType("float");

                    b.Property<double?>("SaldoInicial")
                        .HasColumnType("float");

                    b.Property<double?>("SaldoMovimentacao")
                        .HasColumnType("float");

                    b.Property<double?>("SaldoMultas")
                        .HasColumnType("float");

                    b.ToTable("ViewEmpenhoMulta");
                });

            modelBuilder.Entity("FrotiX.Models.ViewEmpenhos", b =>
                {
                    b.Property<int?>("AnoVigencia")
                        .HasColumnType("int");

                    b.Property<Guid?>("AtaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ContratoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DataEmissao")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("EmpenhoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Movimentacoes")
                        .HasColumnType("int");

                    b.Property<string>("NotaEmpenho")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("SaldoFinal")
                        .HasColumnType("float");

                    b.Property<double?>("SaldoInicial")
                        .HasColumnType("float");

                    b.Property<double?>("SaldoMovimentacao")
                        .HasColumnType("float");

                    b.Property<double?>("SaldoNotas")
                        .HasColumnType("float");

                    b.Property<DateTime?>("VigenciaFinal")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("VigenciaInicial")
                        .HasColumnType("datetime2");

                    b.ToTable("ViewEmpenhos");
                });

            modelBuilder.Entity("FrotiX.Models.ViewEventos", b =>
                {
                    b.Property<double?>("CustoViagem")
                        .HasColumnType("float");

                    b.Property<string>("DataFinal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DataInicial")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("EventoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomeRequisitante")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomeSetor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("QtdParticipantes")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("ViewEventos");
                });

            modelBuilder.Entity("FrotiX.Models.ViewExisteItemContrato", b =>
                {
                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ExisteVeiculo")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ItemVeiculoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("NumItem")
                        .HasColumnType("int");

                    b.Property<int?>("Quantidade")
                        .HasColumnType("int");

                    b.Property<Guid?>("RepactuacaoContratoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("ValUnitario")
                        .HasColumnType("float");

                    b.ToTable("ViewExisteItemContrato");
                });

            modelBuilder.Entity("FrotiX.Models.ViewFluxoEconomildo", b =>
                {
                    b.Property<DateTime?>("Data")
                        .HasColumnType("datetime2");

                    b.Property<string>("DescricaoVeiculo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HoraFim")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HoraInicio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MOB")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("MotoristaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("NomeMotorista")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("QtdPassageiros")
                        .HasColumnType("int");

                    b.Property<string>("TipoCondutor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("VeiculoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ViagemEconomildoId")
                        .HasColumnType("uniqueidentifier");

                    b.ToTable("ViewFluxoEconomildo");
                });

            modelBuilder.Entity("FrotiX.Models.ViewFluxoEconomildoData", b =>
                {
                    b.Property<DateTime?>("Data")
                        .HasColumnType("datetime2");

                    b.Property<string>("DescricaoVeiculo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HoraFim")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HoraInicio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MOB")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("MotoristaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("NomeMotorista")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("QtdPassageiros")
                        .HasColumnType("int");

                    b.Property<string>("TipoCondutor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("VeiculoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ViagemEconomildoId")
                        .HasColumnType("uniqueidentifier");

                    b.ToTable("ViewFluxoEconomildoData");
                });

            modelBuilder.Entity("FrotiX.Models.ViewItensManutencao", b =>
                {
                    b.Property<string>("DataItem")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImagemOcorrencia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ItemManutencaoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ManutencaoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("MotoristaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("NomeMotorista")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumFicha")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Resumo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipoItem")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ViagemId")
                        .HasColumnType("uniqueidentifier");

                    b.ToTable("ViewItensManutencao");
                });

            modelBuilder.Entity("FrotiX.Models.ViewLavagem", b =>
                {
                    b.Property<string>("Data")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DescricaoVeiculo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Horario")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lavadores")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LavadoresId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("LavagemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("MotoristaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("VeiculoId")
                        .HasColumnType("uniqueidentifier");

                    b.ToTable("ViewLavagem");
                });

            modelBuilder.Entity("FrotiX.Models.ViewLotacaoMotorista", b =>
                {
                    b.Property<string>("DataFim")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DataInicial")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("LotacaoMotoristaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("Lotado")
                        .HasColumnType("bit");

                    b.Property<string>("Motivo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MotoristaCobertura")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("MotoristaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Unidade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("UnidadeId")
                        .HasColumnType("uniqueidentifier");

                    b.ToTable("ViewLotacaoMotorista");
                });

            modelBuilder.Entity("FrotiX.Models.ViewLotacoes", b =>
                {
                    b.Property<string>("DataInicio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("LotacaoMotoristaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("Lotado")
                        .HasColumnType("bit");

                    b.Property<string>("Motorista")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("MotoristaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("NomeCategoria")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Unidade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("UnidadeId")
                        .HasColumnType("uniqueidentifier");

                    b.ToTable("ViewLotacoes");
                });

            modelBuilder.Entity("FrotiX.Models.ViewManutencao", b =>
                {
                    b.Property<string>("DataDevolucao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DataDevolucaoReserva")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DataEntrega")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DataRecebimentoReserva")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DataRecolhimento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DataSolicitacao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DescricaoVeiculo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ManutencaoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("NumOS")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Reserva")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResumoOS")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusOS")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("VeiculoId")
                        .HasColumnType("uniqueidentifier");

                    b.ToTable("ViewManutencao");
                });

            modelBuilder.Entity("FrotiX.Models.ViewMediaConsumo", b =>
                {
                    b.Property<decimal?>("ConsumoGeral")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid?>("VeiculoId")
                        .HasColumnType("uniqueidentifier");

                    b.ToTable("ViewMediaConsumo");
                });

            modelBuilder.Entity("FrotiX.Models.ViewMotoristaFluxo", b =>
                {
                    b.Property<string>("MotoristaId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomeMotorista")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("ViewMotoristaFluxo");
                });

            modelBuilder.Entity("FrotiX.Models.ViewMotoristas", b =>
                {
                    b.Property<string>("AnoContrato")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CNH")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CategoriaCNH")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Celular01")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ContratoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataAlteracao")
                        .HasColumnType("datetime2");

                    b.Property<string>("DescricaoFornecedor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EfetivoFerista")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Foto")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("MotoristaCondutor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("MotoristaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomeCompleto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroContrato")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ponto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sigla")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("TipoCondutor")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("ViewMotoristas");
                });

            modelBuilder.Entity("FrotiX.Models.ViewMultas", b =>
                {
                    b.Property<string>("Artigo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Data")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DataPagamento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fase")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Hora")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Localizacao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("MotoristaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("MultaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumInfracao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Observacao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("OrgaoAutuanteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("Paga")
                        .HasColumnType("bit");

                    b.Property<string>("Placa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProcessoEDoc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sigla")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("TipoMultaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("ValorAteVencimento")
                        .HasColumnType("float");

                    b.Property<double?>("ValorPago")
                        .HasColumnType("float");

                    b.Property<double?>("ValorPosVencimento")
                        .HasColumnType("float");

                    b.Property<Guid?>("VeiculoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Vencimento")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("viewMultas");
                });

            modelBuilder.Entity("FrotiX.Models.ViewNoFichaVistoria", b =>
                {
                    b.Property<int?>("NoFichaVistoria")
                        .HasColumnType("int");

                    b.ToTable("ViewNoFichaVistoria");
                });

            modelBuilder.Entity("FrotiX.Models.ViewOcorrencia", b =>
                {
                    b.Property<string>("DataInicial")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DescricaoOcorrencia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DescricaoSolucaoOcorrencia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DescricaoVeiculo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImagemOcorrencia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ItemManutencaoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("MotoristaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("NoFichaVistoria")
                        .HasColumnType("int");

                    b.Property<string>("NomeMotorista")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResumoOcorrencia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusOcorrencia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("VeiculoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ViagemId")
                        .HasColumnType("uniqueidentifier");

                    b.ToTable("ViewOcorrencia");
                });

            modelBuilder.Entity("FrotiX.Models.ViewPendenciasManutencao", b =>
                {
                    b.Property<string>("DataItem")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImagemOcorrencia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ItemManutencaoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ManutencaoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("MotoristaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumFicha")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Resumo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipoItem")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("VeiculoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ViagemId")
                        .HasColumnType("uniqueidentifier");

                    b.ToTable("ViewPendenciasManutencao");
                });

            modelBuilder.Entity("FrotiX.Models.ViewProcuraFicha", b =>
                {
                    b.Property<DateTime?>("DataFinal")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataInicial")
                        .HasColumnType("datetime2");

                    b.Property<string>("HoraFim")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HoraInicio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("MotoristaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("NoFichaVistoria")
                        .HasColumnType("int");

                    b.Property<Guid?>("VeiculoId")
                        .HasColumnType("uniqueidentifier");

                    b.ToTable("ViewProcuraFicha");
                });

            modelBuilder.Entity("FrotiX.Models.ViewRequisitantes", b =>
                {
                    b.Property<string>("Requisitante")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("RequisitanteId")
                        .HasColumnType("uniqueidentifier");

                    b.ToTable("ViewRequisitantes");
                });

            modelBuilder.Entity("FrotiX.Models.ViewSetores", b =>
                {
                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("SetorPaiId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("SetorSolicitanteId")
                        .HasColumnType("uniqueidentifier");

                    b.ToTable("ViewSetores");
                });

            modelBuilder.Entity("FrotiX.Models.ViewVeiculos", b =>
                {
                    b.Property<Guid?>("CombustivelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("Consumo")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("DataAlteracao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MarcaModelo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomeCompleto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrigemVeiculo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Placa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Quilometragem")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sigla")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Status")
                        .HasColumnType("bit");

                    b.Property<Guid>("VeiculoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("VeiculoReserva")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("ViewVeiculos");
                });

            modelBuilder.Entity("FrotiX.Models.ViewViagens", b =>
                {
                    b.Property<string>("CombustivelFinal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CombustivelInicial")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("CustoViagem")
                        .HasColumnType("float");

                    b.Property<string>("DataFinal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DataInicial")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DescricaoOcorrencia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DescricaoSolucaoOcorrencia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DescricaoVeiculo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("EventoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Finalidade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HoraFim")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HoraInicio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImagemOcorrencia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ItemManutencaoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("KmFinal")
                        .HasColumnType("int");

                    b.Property<int?>("KmInicial")
                        .HasColumnType("int");

                    b.Property<Guid?>("MotoristaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("NoFichaVistoria")
                        .HasColumnType("int");

                    b.Property<string>("NomeMotorista")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomeRequisitante")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomeSetor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Placa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("RequisitanteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ResumoOcorrencia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("SetorSolicitanteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("StatusAgendamento")
                        .HasColumnType("bit");

                    b.Property<string>("StatusCartaoAbastecimento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusDocumento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusOcorrencia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("UnidadeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("VeiculoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ViagemId")
                        .HasColumnType("uniqueidentifier");

                    b.ToTable("ViewViagens");
                });

            modelBuilder.Entity("FrotiX.Models.ViewViagensAgenda", b =>
                {
                    b.Property<DateTime?>("DataInicial")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("EventoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Finalidade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("FoiAgendamento")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("HoraInicio")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("MotoristaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("NomeEvento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("StatusAgendamento")
                        .HasColumnType("bit");

                    b.Property<Guid?>("VeiculoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ViagemId")
                        .HasColumnType("uniqueidentifier");

                    b.ToTable("ViewViagensAgenda");
                });

            modelBuilder.Entity("FrotiX.Models.ViewViagensAgendaTodosMeses", b =>
                {
                    b.Property<DateTime?>("DataInicial")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Finalidade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("HoraInicio")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("MotoristaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("NomeEvento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("StatusAgendamento")
                        .HasColumnType("bit");

                    b.Property<Guid?>("VeiculoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ViagemId")
                        .HasColumnType("uniqueidentifier");

                    b.ToTable("ViewViagensAgendaTodosMeses");
                });

            modelBuilder.Entity("FrotiX.Models.Abastecimento", b =>
                {
                    b.HasOne("FrotiX.Models.Combustivel", "Combustivel")
                        .WithMany()
                        .HasForeignKey("CombustivelId");

                    b.HasOne("FrotiX.Models.Motorista", "Motorista")
                        .WithMany()
                        .HasForeignKey("MotoristaId");

                    b.HasOne("FrotiX.Models.Veiculo", "Veiculo")
                        .WithMany()
                        .HasForeignKey("VeiculoId");

                    b.Navigation("Combustivel");

                    b.Navigation("Motorista");

                    b.Navigation("Veiculo");
                });

            modelBuilder.Entity("FrotiX.Models.AtaRegistroPrecos", b =>
                {
                    b.HasOne("FrotiX.Models.Fornecedor", "Fornecedor")
                        .WithMany()
                        .HasForeignKey("FornecedorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Fornecedor");
                });

            modelBuilder.Entity("FrotiX.Models.Cadastros.SecaoPatrimonial", b =>
                {
                    b.HasOne("FrotiX.Models.Cadastros.SetorPatrimonial", "SetorPatrimonial")
                        .WithMany()
                        .HasForeignKey("SetorId");

                    b.Navigation("SetorPatrimonial");
                });

            modelBuilder.Entity("FrotiX.Models.Contrato", b =>
                {
                    b.HasOne("FrotiX.Models.Fornecedor", "Fornecedor")
                        .WithMany()
                        .HasForeignKey("FornecedorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Fornecedor");
                });

            modelBuilder.Entity("FrotiX.Models.Empenho", b =>
                {
                    b.HasOne("FrotiX.Models.AtaRegistroPrecos", "AtaRegistroPrecos")
                        .WithMany()
                        .HasForeignKey("AtaId");

                    b.HasOne("FrotiX.Models.Contrato", "Contrato")
                        .WithMany()
                        .HasForeignKey("ContratoId");

                    b.Navigation("AtaRegistroPrecos");

                    b.Navigation("Contrato");
                });

            modelBuilder.Entity("FrotiX.Models.EmpenhoMulta", b =>
                {
                    b.HasOne("FrotiX.Models.OrgaoAutuante", "OrgaoAutuante")
                        .WithMany()
                        .HasForeignKey("OrgaoAutuanteId");

                    b.Navigation("OrgaoAutuante");
                });

            modelBuilder.Entity("FrotiX.Models.Evento", b =>
                {
                    b.HasOne("FrotiX.Models.Requisitante", "Requisitante")
                        .WithMany()
                        .HasForeignKey("RequisitanteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FrotiX.Models.SetorSolicitante", "SetorSolicitante")
                        .WithMany()
                        .HasForeignKey("SetorSolicitanteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Requisitante");

                    b.Navigation("SetorSolicitante");
                });

            modelBuilder.Entity("FrotiX.Models.ItemVeiculoAta", b =>
                {
                    b.HasOne("FrotiX.Models.RepactuacaoAta", "RepactuacaoAta")
                        .WithMany()
                        .HasForeignKey("RepactuacaoAtaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RepactuacaoAta");
                });

            modelBuilder.Entity("FrotiX.Models.ItemVeiculoContrato", b =>
                {
                    b.HasOne("FrotiX.Models.RepactuacaoContrato", "RepactuacaoContrato")
                        .WithMany()
                        .HasForeignKey("RepactuacaoContratoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RepactuacaoContrato");
                });

            modelBuilder.Entity("FrotiX.Models.ItensManutencao", b =>
                {
                    b.HasOne("FrotiX.Models.Manutencao", "Manutencao")
                        .WithMany()
                        .HasForeignKey("ManutencaoId");

                    b.HasOne("FrotiX.Models.Motorista", "Motorista")
                        .WithMany()
                        .HasForeignKey("MotoristaId");

                    b.HasOne("FrotiX.Models.Viagem", "Viagem")
                        .WithMany()
                        .HasForeignKey("ViagemId");

                    b.Navigation("Manutencao");

                    b.Navigation("Motorista");

                    b.Navigation("Viagem");
                });

            modelBuilder.Entity("FrotiX.Models.Lavador", b =>
                {
                    b.HasOne("FrotiX.Models.Contrato", "Contrato")
                        .WithMany()
                        .HasForeignKey("ContratoId");

                    b.Navigation("Contrato");
                });

            modelBuilder.Entity("FrotiX.Models.LavadoresLavagem", b =>
                {
                    b.HasOne("FrotiX.Models.Lavador", "Lavador")
                        .WithMany()
                        .HasForeignKey("LavadorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FrotiX.Models.Lavagem", "Lavagem")
                        .WithMany()
                        .HasForeignKey("LavagemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Lavador");

                    b.Navigation("Lavagem");
                });

            modelBuilder.Entity("FrotiX.Models.Lavagem", b =>
                {
                    b.HasOne("FrotiX.Models.Motorista", "Motorista")
                        .WithMany()
                        .HasForeignKey("MotoristaId");

                    b.HasOne("FrotiX.Models.Veiculo", "Veiculo")
                        .WithMany()
                        .HasForeignKey("VeiculoId");

                    b.Navigation("Motorista");

                    b.Navigation("Veiculo");
                });

            modelBuilder.Entity("FrotiX.Models.Manutencao", b =>
                {
                    b.HasOne("FrotiX.Models.Veiculo", "Veiculo")
                        .WithMany()
                        .HasForeignKey("VeiculoId");

                    b.HasOne("FrotiX.Models.Veiculo", "VeiculoReserva")
                        .WithMany()
                        .HasForeignKey("VeiculoReservaId");

                    b.Navigation("Veiculo");

                    b.Navigation("VeiculoReserva");
                });

            modelBuilder.Entity("FrotiX.Models.ModeloVeiculo", b =>
                {
                    b.HasOne("FrotiX.Models.MarcaVeiculo", "MarcaVeiculo")
                        .WithMany()
                        .HasForeignKey("MarcaId");

                    b.Navigation("MarcaVeiculo");
                });

            modelBuilder.Entity("FrotiX.Models.Motorista", b =>
                {
                    b.HasOne("FrotiX.Models.Contrato", "Contrato")
                        .WithMany()
                        .HasForeignKey("ContratoId");

                    b.HasOne("FrotiX.Models.Unidade", "Unidade")
                        .WithMany()
                        .HasForeignKey("UnidadeId");

                    b.Navigation("Contrato");

                    b.Navigation("Unidade");
                });

            modelBuilder.Entity("FrotiX.Models.MovimentacaoEmpenho", b =>
                {
                    b.HasOne("FrotiX.Models.Empenho", "Empenho")
                        .WithMany()
                        .HasForeignKey("EmpenhoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empenho");
                });

            modelBuilder.Entity("FrotiX.Models.MovimentacaoEmpenhoMulta", b =>
                {
                    b.HasOne("FrotiX.Models.EmpenhoMulta", "EmpenhoMulta")
                        .WithMany()
                        .HasForeignKey("EmpenhoMultaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FrotiX.Models.Multa", "Multa")
                        .WithMany()
                        .HasForeignKey("MultaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EmpenhoMulta");

                    b.Navigation("Multa");
                });

            modelBuilder.Entity("FrotiX.Models.Multa", b =>
                {
                    b.HasOne("FrotiX.Models.EmpenhoMulta", "EmpenhoMulta")
                        .WithMany()
                        .HasForeignKey("EmpenhoMultaId");

                    b.HasOne("FrotiX.Models.Motorista", "Motorista")
                        .WithMany()
                        .HasForeignKey("MotoristaId");

                    b.HasOne("FrotiX.Models.OrgaoAutuante", "OrgaoAutuante")
                        .WithMany()
                        .HasForeignKey("OrgaoAutuanteId");

                    b.HasOne("FrotiX.Models.TipoMulta", "TipoMulta")
                        .WithMany()
                        .HasForeignKey("TipoMultaId");

                    b.HasOne("FrotiX.Models.Veiculo", "Veiculo")
                        .WithMany()
                        .HasForeignKey("VeiculoId");

                    b.Navigation("EmpenhoMulta");

                    b.Navigation("Motorista");

                    b.Navigation("OrgaoAutuante");

                    b.Navigation("TipoMulta");

                    b.Navigation("Veiculo");
                });

            modelBuilder.Entity("FrotiX.Models.NotaFiscal", b =>
                {
                    b.HasOne("FrotiX.Models.AtaRegistroPrecos", "AtaRegistroPrecos")
                        .WithMany()
                        .HasForeignKey("ContratoId");

                    b.HasOne("FrotiX.Models.Contrato", "Contrato")
                        .WithMany()
                        .HasForeignKey("ContratoId");

                    b.HasOne("FrotiX.Models.Empenho", "Empenho")
                        .WithMany()
                        .HasForeignKey("EmpenhoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FrotiX.Models.Veiculo", "Veiculo")
                        .WithMany()
                        .HasForeignKey("VeiculoId");

                    b.Navigation("AtaRegistroPrecos");

                    b.Navigation("Contrato");

                    b.Navigation("Empenho");

                    b.Navigation("Veiculo");
                });

            modelBuilder.Entity("FrotiX.Models.Operador", b =>
                {
                    b.HasOne("FrotiX.Models.Contrato", "Contrato")
                        .WithMany()
                        .HasForeignKey("ContratoId");

                    b.Navigation("Contrato");
                });

            modelBuilder.Entity("FrotiX.Models.Patrimonio", b =>
                {
                    b.HasOne("FrotiX.Models.Cadastros.SecaoPatrimonial", "SecaoPatrimonial")
                        .WithMany()
                        .HasForeignKey("SecaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FrotiX.Models.Cadastros.SetorPatrimonial", "SetorPatrimonial")
                        .WithMany()
                        .HasForeignKey("SetorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SecaoPatrimonial");

                    b.Navigation("SetorPatrimonial");
                });

            modelBuilder.Entity("FrotiX.Models.RepactuacaoAta", b =>
                {
                    b.HasOne("FrotiX.Models.AtaRegistroPrecos", "AtaRegistroPrecos")
                        .WithMany()
                        .HasForeignKey("AtaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AtaRegistroPrecos");
                });

            modelBuilder.Entity("FrotiX.Models.RepactuacaoContrato", b =>
                {
                    b.HasOne("FrotiX.Models.Contrato", "Contrato")
                        .WithMany()
                        .HasForeignKey("ContratoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Contrato");
                });

            modelBuilder.Entity("FrotiX.Models.RepactuacaoServicos", b =>
                {
                    b.HasOne("FrotiX.Models.RepactuacaoContrato", "RepactuacaoContrato")
                        .WithMany()
                        .HasForeignKey("RepactuacaoContratoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RepactuacaoContrato");
                });

            modelBuilder.Entity("FrotiX.Models.RepactuacaoTerceirizacao", b =>
                {
                    b.HasOne("FrotiX.Models.RepactuacaoContrato", "RepactuacaoContrato")
                        .WithMany()
                        .HasForeignKey("RepactuacaoContratoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RepactuacaoContrato");
                });

            modelBuilder.Entity("FrotiX.Models.Requisitante", b =>
                {
                    b.HasOne("FrotiX.Models.SetorSolicitante", "SetorSolicitante")
                        .WithMany()
                        .HasForeignKey("SetorSolicitanteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SetorSolicitante");
                });

            modelBuilder.Entity("FrotiX.Models.Veiculo", b =>
                {
                    b.HasOne("FrotiX.Models.AtaRegistroPrecos", "AtaRegistroPrecos")
                        .WithMany()
                        .HasForeignKey("AtaId");

                    b.HasOne("FrotiX.Models.Combustivel", "Combustivel")
                        .WithMany()
                        .HasForeignKey("CombustivelId");

                    b.HasOne("FrotiX.Models.ItemVeiculoAta", "ItemVeiculoAta")
                        .WithMany()
                        .HasForeignKey("ItemVeiculoAtaId");

                    b.HasOne("FrotiX.Models.ItemVeiculoContrato", "ItemVeiculoContrato")
                        .WithMany()
                        .HasForeignKey("ItemVeiculoId");

                    b.HasOne("FrotiX.Models.MarcaVeiculo", "MarcaVeiculo")
                        .WithMany()
                        .HasForeignKey("MarcaId");

                    b.HasOne("FrotiX.Models.ModeloVeiculo", "ModeloVeiculo")
                        .WithMany()
                        .HasForeignKey("ModeloId");

                    b.HasOne("FrotiX.Models.PlacaBronze", "PlacaBronze")
                        .WithMany()
                        .HasForeignKey("PlacaBronzeId");

                    b.HasOne("FrotiX.Models.Unidade", "Unidade")
                        .WithMany()
                        .HasForeignKey("UnidadeId");

                    b.Navigation("AtaRegistroPrecos");

                    b.Navigation("Combustivel");

                    b.Navigation("ItemVeiculoAta");

                    b.Navigation("ItemVeiculoContrato");

                    b.Navigation("MarcaVeiculo");

                    b.Navigation("ModeloVeiculo");

                    b.Navigation("PlacaBronze");

                    b.Navigation("Unidade");
                });

            modelBuilder.Entity("FrotiX.Models.Viagem", b =>
                {
                    b.HasOne("FrotiX.Models.Evento", "Evento")
                        .WithMany()
                        .HasForeignKey("EventoId");

                    b.HasOne("FrotiX.Models.ItensManutencao", "ItensManutencao")
                        .WithOne()
                        .HasForeignKey("FrotiX.Models.Viagem", "ItemManutencaoId");

                    b.HasOne("FrotiX.Models.Motorista", "Motorista")
                        .WithMany()
                        .HasForeignKey("MotoristaId");

                    b.HasOne("FrotiX.Models.Requisitante", "Requisitante")
                        .WithMany()
                        .HasForeignKey("RequisitanteId");

                    b.HasOne("FrotiX.Models.SetorSolicitante", "SetorSolicitante")
                        .WithMany()
                        .HasForeignKey("SetorSolicitanteId");

                    b.HasOne("FrotiX.Models.Veiculo", "Veiculo")
                        .WithMany()
                        .HasForeignKey("VeiculoId");

                    b.Navigation("Evento");

                    b.Navigation("ItensManutencao");

                    b.Navigation("Motorista");

                    b.Navigation("Requisitante");

                    b.Navigation("SetorSolicitante");

                    b.Navigation("Veiculo");
                });

            modelBuilder.Entity("FrotiX.Models.ViagensEconomildo", b =>
                {
                    b.HasOne("FrotiX.Models.Motorista", "Motorista")
                        .WithMany()
                        .HasForeignKey("MotoristaId");

                    b.HasOne("FrotiX.Models.Veiculo", "Veiculo")
                        .WithMany()
                        .HasForeignKey("VeiculoId");

                    b.Navigation("Motorista");

                    b.Navigation("Veiculo");
                });
#pragma warning restore 612, 618
        }
    }
}

@page

@using FrotiX.Repository.IRepository
@using Syncfusion.EJ2
@using Stimulsoft.Report.Mvc;

@inject IUnitOfWork _unitOfWork

@{

    @functions {
        public void OnGet()
        {
            FrotiX.Pages.Viagens.IndexModel.Initialize(_unitOfWork);
            ViewData["lstVeiculos"] = new ListaEconomildos(_unitOfWork).VeiculosList();
            ViewData["lstMotoristas"] = new ListaMotoristaMOB(_unitOfWork).MotoristaList();
        }
    }
}


@model FrotiX.Models.Viagem

@{
    ViewData["Title"] = "Viagens";
    ViewData["PageName"] = "viagens_fluxopassageiros";
    ViewData["Heading"] = "<i class='fa-duotone fa-car-bus'></i> Cadastros: <span class='fw-300'>Fluxo de Passageiros dos Economildos</span>";
    ViewData["Category1"] = "Cadastros";
    ViewData["PageIcon"] = "fa-duotone fa-car-bus";
}

<style>
    .fundo-cinza {
        background-color: #2F4F4F;
        color: aliceblue;
    }
</style>

<script>



    //------ Indica um Item Sendo Escolhido-------------
    //==================================================
    function DefineEscolhaVeiculo() {

        var veiculos = document.getElementById('lstVeiculos').ej2_instances[0];

    }

    function DefineEscolhaData() {
    }

    //------ Função de Escolha do ComboBox Veículos ------------------
    //================================================================
    function VeiculosValueChange() {

    }

</script>


<div class="row">
    <div class="col-xl-12">
        <div id="panel-1" class="panel">
            <div class="panel-container show">
                <br />
                <div class="panel-content ">
                    <div class="box-body">
                        <div class="col-12 px-3" style="border-bottom:1px solid #325d88">
                            <h2 class="text-primary">
                                Escolha a Data e o respectivo Economildo para registrar suas Viagens:
                            </h2>
                        </div>
                        <div class="col-12" id="divEscolhas">


                            <!--Lembrete pra organizar esse código em outro local-->
                            <script>
                                document.addEventListener('DOMContentLoaded', function () {
                                    var veiculosCombobox = document.getElementById('lstVeiculos').ej2_instances[0]; //Temos que chamar o ej2 porque é um elemento do Syncfusion, ou do Kendo UI (Ainda não descobri)
                                    var motoristasCombobox = document.getElementById('lstMotoristas').ej2_instances[0];

                                    veiculosCombobox.focusIn = function () { this.showPopup(); }; //Define uma função que chama o popup, no caso ativa

                                    motoristasCombobox.focusIn = function () { this.showPopup(); };


                                    //Temos que chamar como element, porque o ej2 encapsula os componentes
                                    //então no caso estamos acessando o elemento html dentro da variável complexa Combobox
                                    veiculosCombobox.element.addEventListener('focus', function () { veiculosCombobox.focusIn(); }); // Aqui é um ouvinte que chama a função definida acima

                                    motoristasCombobox.element.addEventListener('focus', function () { motoristasCombobox.focusIn(); });//Aqui é o outro ouvinte


                                });
                            </script>



                            <div class="form-group row">
                                <div class="col-3 col-sm-3">
                                    <br />
                                    <label class="label font-weight-bold color-black ">Escolha uma Data</label>
                                    <input id="txtData" class="form-control form-control-xs" type="date" />
                                </div>
                                <div class="col-3 col-sm-3 col-md-3 pb-2">
                                    <br />
                                    <label class="label font-weight-bold color-black ">Placa do Economildo</label>
                                    <ejs-combobox id="lstVeiculos" placeholder="Selecione um Veículo" allowFiltering="true" filterType="Contains" dataSource="@ViewData["lstVeiculos"]" popupHeight="250px" width="100%" showClearButton="true">
                                        <e-combobox-fields text="Descricao" value="Id"></e-combobox-fields>
                                    </ejs-combobox>
                                </div>
                                <div class="col-3 col-sm-3 col-md-3 pb-2">
                                    <br />
                                    <label class="label font-weight-bold color-black ">Motorista do Economildo</label>
                                    <ejs-combobox id="lstMotoristas" placeholder="Selecione um Motorista" allowFiltering="true" filterType="Contains" dataSource="@ViewData["lstMotoristas"]" popupHeight="250px" width="100%" showClearButton="true">
                                        <e-combobox-fields text="Descricao" value="Id"></e-combobox-fields>
                                    </ejs-combobox>
                                </div>
                                <div class="col-9 col-sm-6 col-md-3 pb-2">
                                    <br />
                                    <label class="label font-weight-bold">Indique o MOB a ser Registrado</label>
                                    <select class="form-control form-control-xs" id="lstMOB">
                                        <option value=""></option>
                                        <option value="Rodoviaria">Rodoviária</option>
                                        <option value="Cefor">Cefor</option>
                                        <option value="PGR">PGR</option>
                                    </select>
                                </div>
                                <div class="col-9 col-sm-6 col-md-3 pb-2">
                                    <br />
                                    <label class="label font-weight-bold">Indique o Responsável pelo Registro</label>
                                    <select class="form-control form-control-xs" id="lstResponsavel">
                                        <option value=""></option>
                                        <option value="Angela">Angela</option>
                                        <option value="Milena">Milena</option>
                                        <option value="Otto">Otto</option>
                                    </select>
                                </div>
                                <div class="col-6">
                                    <br />
                                    <br />
                                    <div class="row">
                                        <div class="col-6">
                                            <button id="btnInsereFicha" class="btn btn-primary form-control">Insere Ficha</button>
                                        </div>
                                    </div>
                                </div>

                            </div>
                        </div>

                        <br />

                        <div class="col-12 px-3" style="border-bottom:1px solid #325d88" hidden="hidden" id="divTitulo">
                            <h3 class="text-primary">
                                Informe todas as viagens de Ida e Volta do referido Economildo:
                            </h3>
                        </div>

                        <div class="row" hidden="hidden" id="divInsercao">
                            <div class="col-10">
                                <div class="panel-content ">
                                    <div class="box-body">
                                        <div class="row">
                                            <div class="col-3">
                                                <div class="form-group">
                                                    <label class="label font-weight-bold">Ida/Volta</label>
                                                    <select class="form-control form-control-xs" id="lstIdaVolta">
                                                        <option value="IDA">Ida</option>
                                                        <option value="VOLTA">Volta</option>
                                                    </select>
                                                </div>
                                            </div>
                                            <div class="col-2 col-sm-2">
                                                <label class="label font-weight-bold color-black ">Hora Início</label>
                                                <input id="txtHoraInicio" class="form-control form-control-xs" type="time" />
                                            </div>
                                            <div class="col-2 col-sm-2">
                                                <label class="label font-weight-bold color-black ">Hora Fim</label>
                                                <input id="txtHoraFim" class="form-control form-control-xs" type="time" />
                                            </div>
                                            <div class="col-2 col-sm-2">
                                                <label class="label font-weight-bold color-black ">Quantidade</label>
                                                <input id="txtQtd" class="form-control form-control-xs" type="number" />
                                            </div>

                                            <div class="col-1 align-self-end" aria-label="Insere a Linha!" role="tooltip" data-microtip-position="top-right" data-microtip-size="medium">
                                                <a class="btn btn-nfs btn-primary btn-sm text-white btnFicha" id="btnInsere" style="cursor: pointer;">
                                                    <i class="fa-thin fa-clipboard-list"></i>
                                                </a>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>


                        <div class="row" hidden="hidden" id="divRegistro">
                            <div class="col-6">
                                <div class="panel-content ">
                                    <div class="box-body">
                                        <h3 id="TituloIdas">Viagens de Ida</h3>
                                        @{
                                            List<object> colsida = new List<object>();
                                            colsida.Add(new { field = "horainicioida", direction = "Ascending" });
                                        }
                                        @{
                                            <ejs-grid id="grdIda" toolbar="@(new List<string>() { "Delete"})" GridLines="Both" allowSorting="true">
                                                    <!--Era aqui que ficava o isPrimaryKey="true", como a data inicial não é uma chave primária não tem porque ela estar aqui-->
                                                    <e-grid-editSettings allowAdding="true" allowDeleting="true" allowEditing="true" newRowPosition="Bottom" showDeleteConfirmDialog="true"></e-grid-editSettings>
                                                    <e-grid-sortsettings columns="colsida"></e-grid-sortsettings>
                                                    <e-grid-columns>

                                                        <e-grid-column field="horainicioida" headerText="Hora" textAlign="Center" width="30" allowEditing="true"></e-grid-column>
                                                        <e-grid-column field="horafimida" headerText="Hora" textAlign="Center" width="30" allowEditing="true"></e-grid-column>
                                                        <e-grid-column field="qtdpassageirosida" headerText="Quantidade" textAlign="Center" width="20" allowEditing="true"></e-grid-column>

                                                    </e-grid-columns>
                                                </ejs-grid>
                                        }
                                    </div>
                                </div>
                            </div>
                            <div class="col-6">
                                <div class="panel-content ">
                                    <div class="box-body">
                                        <h3 id="TituloVoltas">Viagens de Volta</h3>
                                        @{
                                            List<object> colsvolta = new List<object>();
                                            colsvolta.Add(new { field = "horainiciovolta", direction = "Ascending" });
                                        }
                                        @{
                                                <ejs-grid id="grdVolta" toolbar="@(new List<string>() { "Delete"})" GridLines="Both" allowSorting="true" >
                                                <e-grid-editSettings allowAdding="true" allowDeleting="true" allowEditing="true" newRowPosition="Bottom" showDeleteConfirmDialog="true"></e-grid-editSettings>
                                                    <e-grid-sortsettings columns="colsvolta"></e-grid-sortsettings>
                                                    <e-grid-columns>

                                                        <e-grid-column field="horainiciovolta" headerText="Hora" textAlign="Center" width="30" allowEditing="true"></e-grid-column>
                                                        <e-grid-column field="horafimvolta" headerText="Hora" textAlign="Center" width="30" allowEditing="true"></e-grid-column>
                                                        <e-grid-column field="qtdpassageirosvolta" headerText="Quantidade" textAlign="Center" width="20" allowEditing="true"></e-grid-column>

                                                    </e-grid-columns>
                                                </ejs-grid>
                                        }
                                    </div>
                                    <br />
                                </div>
                            </div>
                        </div>

                        <div class="form-group row" hidden="hidden" id="divBotao">
                            <div class="col-9">
                                <div class="row">
                                    <div class="col-6">
                                        <button id="btnSubmite" class="btn btn-primary form-control">Registrar Viagens</button>
                                    </div>
                                    <div class="col-6">
                                        <button class="btn btn-nfs btn-danger btn-sm text-white btnFicha" id="btnCancela">Cancela Inserção</button>
                                    </div>
                                </div>
                            </div>
                        </div>

                    </div>
                </div>
            </div>
        </div>
    </div>
    <input id="txtHoraInicioAnteriorIda" class="form-control form-control-xs" type="time" hidden="hidden" />
    <input id="txtHoraFimAnteriorIda" class="form-control form-control-xs" type="time" hidden="hidden" />
    <input id="txtQtdAnteriorIda" class="form-control form-control-xs" type="number" hidden="hidden" />

    <input id="txtHoraInicioAnteriorVolta" class="form-control form-control-xs" type="time" hidden="hidden" />
    <input id="txtHoraFimAnteriorVolta" class="form-control form-control-xs" type="time" hidden="hidden" />
    <input id="txtQtdAnteriorVolta" class="form-control form-control-xs" type="number" hidden="hidden" />
</div>

@section ScriptsBlock {

    <script>

        $(document).ready(function () {


            $("#txtData").change(function () {


            });

        });


    </script>

    <script>

        //Controla o botão de inserir viagem nos grids
        document.getElementById('btnInsereFicha').onclick = function () {

            //Pega elementos da viagem
            var dataviagem = document.getElementById('txtData').value;
            var economildo = document.getElementById('lstVeiculos').ej2_instances[0].value;
            var motorista = document.getElementById('lstMotoristas').ej2_instances[0].value;
            var categoria = '';
            var mob = document.getElementById('lstMOB').value;
            var responsavel = document.getElementById('lstResponsavel').value;

            //Faz as validações necessárias para permitir a inserção da viagem
            //----------------------------------------------------------------
            if (dataviagem == '') {
                toastr.error('A Data da viagem é obrigatória.');
                setTimeout(function () { $('#txtData').focus() }, 500);
                return;
            }

            if (economildo == '' || economildo == null) {
                toastr.error('O Veículo é obrigatório.');
                setTimeout(function () { $('#lstVeiculos').focus() }, 500);
                return;
            }

            if (motorista == '' || motorista == null) {
                toastr.error('O Motorista é obrigatório.');
                setTimeout(function () { $('#lstMotoristas').focus() }, 500);
                return;
            }

            if (mob == '') {
                toastr.error('O MOB é obrigatório.');
                setTimeout(function () { $('#lstMOB').focus() }, 500);
                return;
            }

            if (responsavel == '') {
                toastr.error('O Responsável pelo Registro é obrigatório.');
                setTimeout(function () { $('#lstResponsavel').focus() }, 500);
                return;
            }

            //Verifica se Existe Data
            //=======================

            var veiculoId = document.getElementById('lstVeiculos').ej2_instances[0].value;

            var objViagem = JSON.stringify({ "Data": $('#txtData').val(), "IdaVolta": '', "HoraInicio": '', "HoraFim": '', "QtdPassageiros": '', "VeiculoId": veiculoId, "MOB": $('#lstMOB').val(), "Responsavel": $('#lstResponsavel').val() })

            $.ajax({
                type: "post",
                url: "/api/Viagem/ExisteDataEconomildo",
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                data: objViagem,

                success: function (data) {
                    if (data.success) {
                        document.getElementById('divTitulo').hidden = false;
                        document.getElementById('divInsercao').hidden = false;
                        document.getElementById('divRegistro').hidden = false;
                        document.getElementById('divBotao').hidden = false;

                        document.getElementById('txtData').disabled = true;
                        document.getElementById('lstVeiculos').ej2_instances[0].enabled = false;
                        document.getElementById('lstMotoristas').ej2_instances[0].enabled = false;
                        document.getElementById('lstMOB').disabled = true;
                        document.getElementById('lstResponsavel').disabled = true;
                        document.getElementById("btnInsereFicha").hidden = true;
                    }
                    else {
                        toastr.error('Já existe uma Ficha inserida para esta Data!');
                        setTimeout(function () { $('#txtData').focus() }, 500);
                        return;
                    }
                },
                error: function (data) {
                    alert("Um erro aconteceu");
                }
            });
        }

    </script>


    <script>

        //Controla o botão de inserir viagem nos grids
        document.getElementById('btnInsere').onclick = function () {

            //Pega elementos da viagem
            var economildo = document.getElementById('lstVeiculos').ej2_instances[0].value;
            var categoria = '';
            var horainicio = document.getElementById('txtHoraInicio').value;
            var horafim = document.getElementById('txtHoraFim').value;
            var qtdpassageiros = document.getElementById('txtQtd').value;

            //Verifica se a viagem é de IDA ou de VOLTA
            if (document.getElementById('lstIdaVolta').value == 'IDA') {
                var horafimanterior = document.getElementById('txtHoraFimAnteriorIda').value
            }
            else {
                var horafimanterior = document.getElementById('txtHoraFimAnteriorVolta').value
            }

            //Faz as validações necessárias para permitir a inserção da viagem
            //----------------------------------------------------------------
            $.ajax({
                type: "get",
                url: "/api/Viagem/PegaCategoria",
                data: { id: economildo },
                success: function (res) {


                    console.log("Categoria: " + res);

                    categoria = res


                },
                error: function (error) {
                    console.log(error);
                }

            });

            if (horainicio == '') {

                swal({
                    title: "Erro!",
                    text: "A Hora de Início da viagem é obrigatória.",
                    icon: "error",
                    buttons: true,
                    
                    buttons: {
                        ok: "Ok"
                    }
                })
                return;
            }

            if (horafim == '') {

                swal({
                    title: "Erro!",
                    text: "A Hora de Fim da viagem é obrigatória.",
                    icon: "error",
                    buttons: true,
                    
                    buttons: {
                        ok: "Ok"
                    }
                })
                return;
            }

            if (qtdpassageiros == '') {

                swal({
                    title: "Erro!",
                    text: "A Quantidade de passageiros é obrigatória.",
                    icon: "error",
                    buttons: true,
                    
                    buttons: {
                        ok: "Ok"
                    }
                })
                return;
            }

            if (qtdpassageiros < 0) {

                swal({
                    title: "Erro!",
                    text: "A Quantidade de passageiros deve ser maior ou igual a zero.",
                    icon: "error",
                    buttons: true,
                    
                    buttons: {
                        ok: "Ok"
                    }
                })
                return;
            }

            if (categoria == 'Ônibus') {

                if (qtdpassageiros > 150) {

                    swal({
                        title: "Erro!",
                        text: "A Quantidade de passageiros do Ônibus não pode exceder 150 pessoas.",
                        icon: "error",
                        buttons: true,
                        
                        buttons: {
                            ok: "Ok"
                        }
                    })
                    return;
                }
            }

            if (categoria == 'Coletivos Pequenos') {

                if (qtdpassageiros > 20) {

                    swal({
                        title: "Erro!",
                        text: "A Quantidade de passageiros dos Coletivos Pequenos não pode exceder 20 pessoas.",
                        icon: "error",
                        buttons: true,
                        
                        buttons: {
                            ok: "Ok"
                        }
                    })
                    return;
                }
            }

            if (horainicio > horafim) {

                swal({
                    title: "Erro!",
                    text: "A Hora Inicial está menor do que a Hora Final.",
                    icon: "error",
                    buttons: true,
                    
                    buttons: {
                        ok: "Ok"
                    }
                })
                return;

            }

            if (horafimanterior != '') {

                if (horainicio < horafimanterior) {

                    swal({
                        title: "Erro!",
                        text: "A Hora Inicial está menor do que a Hora Final anterior.",
                        icon: "error",
                        buttons: true,
                        
                        buttons: {
                            ok: "Ok"
                        }
                    })
                    return;

                }
            }

            //Validações feitas, insere o registro da viagem no respectivo Grid
            //-----------------------------------------------------------------
            if (document.getElementById('lstIdaVolta').value == 'IDA') {
                var gridObj = document.getElementById('grdIda').ej2_instances[0]
                gridObj.addRecord({ horainicioida: horainicio, horafimida: horafim, qtdpassageirosida: qtdpassageiros }, gridObj.getRows().length + 1);
            }
            else {
                var gridObj = document.getElementById('grdVolta').ej2_instances[0]
                gridObj.addRecord({ horainiciovolta: horainicio, horafimvolta: horafim, qtdpassageirosvolta: qtdpassageiros }, gridObj.getRows().length + 1);
            }

            if (document.getElementById('lstIdaVolta').value == 'IDA') {
                document.getElementById('txtHoraInicioAnteriorIda').value = document.getElementById('txtHoraInicio').value;
                document.getElementById('txtHoraFimAnteriorIda').value = document.getElementById('txtHoraFim').value;
                document.getElementById('txtQtdAnteriorIda').value = document.getElementById('txtQtd').value;
            }
            else {
                document.getElementById('txtHoraInicioAnteriorVolta').value = document.getElementById('txtHoraInicio').value;
                document.getElementById('txtHoraFimAnteriorVolta').value = document.getElementById('txtHoraFim').value;
                document.getElementById('txtQtdAnteriorVolta').value = document.getElementById('txtQtd').value;
            }


            //Registra o último registro inserido para posterior validação de novos registros
            document.getElementById('txtHoraInicio').value = '';
            document.getElementById('txtHoraFim').value = '';
            document.getElementById('txtQtd').value = '';
            //Joga o foco para a Hora Início após a inserção - timeout necessário
            setTimeout(function () { $('#txtHoraInicio').focus() }, 500);
        }

    </script>

    <script>

        $('#txtQtd').on('keypress', function (e) {
            if (e.which == 13) {
                $('#btnInsere').click();
            }
        });

    </script>

    <script>

        //Controla o botão de inserir viagens no banco
        //--------------------------------------------
        document.getElementById('btnSubmite').onclick = function () {

            //Insere os registros no banco de dados
            //-------------------------------------
            var veiculoId = document.getElementById('lstVeiculos').ej2_instances[0].value;
            var motoristaId = document.getElementById('lstMotoristas').ej2_instances[0].value;

            // - Pega Grid de IDA
            //-------------------
            var gridObjIda = document.getElementById('grdIda').ej2_instances[0];

            if (gridObjIda.getRows().length != 0) {
                for (var i = 0; i < gridObjIda.getRows().length; i++) {

                    if (gridObjIda.getRows()[i].cells[0].innerHTML != '') {

                        var objViagem = JSON.stringify({ "Data": $('#txtData').val(), "IdaVolta": 'IDA', "HoraInicio": gridObjIda.getRows()[i].cells[0].innerHTML, "HoraFim": gridObjIda.getRows()[i].cells[1].innerHTML, "QtdPassageiros": gridObjIda.getRows()[i].cells[2].innerHTML, "VeiculoId": veiculoId, "MotoristaId": motoristaId, "MOB": $('#lstMOB').val(), "Responsavel": $('#lstResponsavel').val() })

                        //debugger;

                        $.ajax({
                            type: "post",
                            url: "/api/Viagem/AdicionarViagensEconomildo",
                            contentType: "application/json; charset=utf-8",
                            dataType: "json",
                            data: objViagem,

                            success: function (data) {
                                if (data.success) {
                                    toastr.success(data.message);
                                }
                                else {
                                    toastr.error(data.message);
                                }
                            },
                            error: function (data) {
                                alert("Um erro aconteceu");
                            }
                        });
                    }
                }

            }

            // - Pega Grid de VOLTA
            //-------------------
            var gridObjVolta = document.getElementById('grdVolta').ej2_instances[0];

            if (gridObjVolta.getRows().length != 0) {
                for (var i = 0; i < gridObjVolta.getRows().length; i++) {

                    if (gridObjVolta.getRows()[i].cells[0].innerHTML != '') {

                        var objViagem = JSON.stringify({ "Data": $('#txtData').val(), "IdaVolta": 'VOLTA', "HoraInicio": gridObjVolta.getRows()[i].cells[0].innerHTML, "HoraFim": gridObjVolta.getRows()[i].cells[1].innerHTML, "QtdPassageiros": gridObjVolta.getRows()[i].cells[2].innerHTML, "VeiculoId": veiculoId, "MotoristaId": motoristaId, "MOB": $('#lstMOB').val(), "Responsavel": $('#lstResponsavel').val() })

                        $.ajax({
                            type: "post",
                            url: "/api/Viagem/AdicionarViagensEconomildo",
                            contentType: "application/json; charset=utf-8",
                            dataType: "json",
                            data: objViagem,

                            success: function (data) {
                                if (data.success) {
                                    toastr.success(data.message);
                                }
                                else {
                                    toastr.error(data.message);
                                }
                            },
                            error: function (data) {
                                alert("Um erro aconteceu");
                            }
                        });
                    }

                }
            }

            //Limpa Tela para Inserção de Novos Registros
            location.reload();
        }


        //Controla o botão de cancelamento
        //--------------------------------------------
        document.getElementById('btnCancela').onclick = function () {
            location.reload();
        }


    </script>
}

@page
@addTagHelper*, Microsoft.AspNetCore.Mvc.TagHelpers

@model FrotiX.Pages.AtaRegistroPrecos.UpsertModel


@{ ViewData["Title"] = "Atas de Registro de Preços";
    ViewData["PageName"] = "ataregistroprecos_index";
    ViewData["Heading"] = "<i class='fa-duotone fa-folders'></i> Cadastros: <span class='fw-300'>Atas de Registro de Preços</span>";
    ViewData["Category1"] = "Cadastros";
    ViewData["PageIcon"] = "fa-regular fa-folders";
}

<style>
    .form-control-xs {
        height: calc(1em + .775rem + 2px) !important;
        padding: .125rem .25rem !important;
        font-size: .75rem !important;
        line-height: 1.5;
        border-radius: .2rem;
    }

    .label {
        margin-bottom: -5px;
        margin-top: 10px;
    }

    input[type=checkbox] {
        vertical-align: middle;
        position: relative;
        bottom: 1px;
    }

    escondido {
        visibility: hidden;
    }

    .input-icons i {
        position: absolute;
    }

    .input-icons {
        width: 100%;
        margin-bottom: 10px;
    }

    .icon {
        padding: 10px;
        min-width: 40px;
    }

    .input-field {
        width: 100%;
        padding: 10px;
        text-align: center;
    }

    .disable-element {
        pointer-events: none;
        opacity: 0.4;
    }

    .wrapper {
        cursor: not-allowed;
    }

    .e-grid * {
        font-size: 12px !important;
    }
</style>

@section HeadBlock {
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/css/toastr.min.css" />
    <script src="https://cdn.syncfusion.com/js/assets/external/jquery.globalize.min.js"></script>
}


<form method="post" asp-action="Upsert">
    <div class="row">
        <div class="col-xl-12">
            <div id="panel-1" class="panel">
                <div class="panel-container show">
                    <div class="panel-content">
                        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                        @if (Model.AtaObj.AtaRegistroPrecos.AtaId != Guid.Empty)
                        {
                            <input type="hidden" asp-for="AtaObj.AtaRegistroPrecos.AtaId" />
                        }

                        <div class="col-12 px-3" style="border-bottom:1px solid #325d88">
                            <h2 class="text-primary">@(Model.AtaObj.AtaRegistroPrecos.AtaId != Guid.Empty ? "Atualizar " : "Criar ") Ata Registro Preços  </h2>
                        </div>

                        <div class="col-8 pt-3">

                            <div class="row">
                                <div class="col-2">
                                    <div class="form-group">
                                        <label class="label font-weight-bold" asp-for="AtaObj.AtaRegistroPrecos.AnoAta"></label>
                                        <span class="text-danger" asp-validation-for="AtaObj.AtaRegistroPrecos.AnoAta"></span>
                                        <input id="txtAno" class="form-control form-control-xs" asp-for="AtaObj.AtaRegistroPrecos.AnoAta" />
                                    </div>
                                </div>
                                <div class="col-2">
                                    <div class="form-group">
                                        <label class="label font-weight-bold" asp-for="AtaObj.AtaRegistroPrecos.NumeroAta"></label>
                                        <span class="text-danger" asp-validation-for="AtaObj.AtaRegistroPrecos.NumeroAta"></span>
                                        <input id="txtNumeroAta" class="form-control form-control-xs" asp-for="AtaObj.AtaRegistroPrecos.NumeroAta" />
                                    </div>
                                </div>
                                <div class="col-3">
                                    <div class="form-group">
                                        <label class="label font-weight-bold" asp-for="AtaObj.AtaRegistroPrecos.NumeroProcesso"></label>
                                        <span class="text-danger" asp-validation-for="AtaObj.AtaRegistroPrecos.NumeroProcesso"></span>
                                        <input id="txtNumeroProcesso" class="form-control form-control-xs" asp-for="AtaObj.AtaRegistroPrecos.NumeroProcesso" />
                                    </div>
                                </div>
                                <div class="col-2">
                                    <div class="form-group">
                                        <label class="label font-weight-bold" asp-for="AtaObj.AtaRegistroPrecos.AnoProcesso"></label>
                                        <span class="text-danger" asp-validation-for="AtaObj.AtaRegistroPrecos.AnoProcesso"></span>
                                        <input id="txtAnoProcesso" class="form-control form-control-xs" asp-for="AtaObj.AtaRegistroPrecos.AnoProcesso" />
                                    </div>
                                </div>
                            </div>

                            <div class="row">
                                <div class="col-6">
                                    <div class="form-group">
                                        <label class="label font-weight-bold" asp-for="AtaObj.AtaRegistroPrecos.FornecedorId"></label>
                                        <span class="text-danger" asp-validation-for="AtaObj.AtaRegistroPrecos.FornecedorId"></span>
                                        @Html.DropDownListFor(m => m.AtaObj.AtaRegistroPrecos.FornecedorId,
                                                                Model.AtaObj.FornecedorList,
                                                                "- Selecione um Fornecedor -",
                                                                new { @class = "form-control form-control-xs" })
                                    </div>
                                </div>
                                <div class="col-6">
                                    <div class="form-group">
                                        <label class="label font-weight-bold" asp-for="AtaObj.AtaRegistroPrecos.Objeto"></label>
                                        <span class="text-danger" asp-validation-for="AtaObj.AtaRegistroPrecos.Objeto"></span>
                                        <input id="txtObjeto" class="form-control form-control-xs" asp-for="AtaObj.AtaRegistroPrecos.Objeto" />
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-3">
                                    <div class="form-group">
                                        <label class="label font-weight-bold" asp-for="AtaObj.AtaRegistroPrecos.DataInicio"></label>
                                        <span class="text-danger" asp-validation-for="AtaObj.AtaRegistroPrecos.DataInicio"></span>
                                        <input id="txtDataInicio" class="form-control form-control-xs" type="date" asp-for="AtaObj.AtaRegistroPrecos.DataInicio" />
                                    </div>
                                </div>
                                <div class="col-3">
                                    <div class="form-group">
                                        <label class="label font-weight-bold" asp-for="AtaObj.AtaRegistroPrecos.DataFim"></label>
                                        <span class="text-danger" asp-validation-for="AtaObj.AtaRegistroPrecos.DataFim"></span>
                                        <input id="txtDataFim" class="form-control form-control-xs" type="date" asp-for="AtaObj.AtaRegistroPrecos.DataFim" />
                                    </div>
                                </div>
                                <div class="col-3">
                                    <div class="form-group">
                                        <label class="label font-weight-bold" asp-for="AtaObj.AtaRegistroPrecos.Valor"></label>
                                        <span class="text-danger" asp-validation-for="AtaObj.AtaRegistroPrecos.Valor"></span>
                                        <input id="valor" class="form-control form-control-xs" data-inputmask="'alias': 'currency'" style="text-align: right;" asp-for="AtaObj.AtaRegistroPrecos.Valor" onKeyPress="return(moeda(this,'.',',',event))" />
                                    </div>
                                </div>
                            </div>
                            <br />
                            <div id="divVeiculosAdd" class="row" display="none">
                                @{
                                    List<object> cols = new List<object>();
                                    cols.Add(new { field = "numitem", direction = "Ascending" });
                                }
                                @{
                                    <ejs-grid id="grdVeiculos" toolbar="@(new List<string>() { "Add", "Update", "Delete", "Cancel" })" GridLines="Both" QueryCellInfo="calculate" allowSorting="true">
                                        <e-grid-editSettings allowAdding="true" allowDeleting="true" allowEditing="false" newRowPosition="Bottom"></e-grid-editSettings>
                                        <e-grid-sortsettings columns="cols"></e-grid-sortsettings>
                                        <e-grid-columns>

                                            <e-grid-column field="numitem" headerText="Item" textAlign="Center" width="20" allowEditing="true"></e-grid-column>
                                            <e-grid-column field="descricao" headerText="Descrição do Veículo" textAlign="Left" width="150" allowEditing="true"></e-grid-column>
                                            <e-grid-column field="quantidade" headerText="Quantidade" textAlign="Center" width="30" allowEditing="true"></e-grid-column>
                                            <e-grid-column field="valorunitario" headerText="Valor Unitário" textAlign="Right" width="30" allowEditing="true" format="N2"></e-grid-column>
                                            <e-grid-column field="valortotal" headerText="Valor Total" width="30" textAlign="Right" allowEditing="false" format="N2"></e-grid-column>

                                        </e-grid-columns>
                                    </ejs-grid>
                                }
                                <div class="col-3">
                                    <div class="form-group">
                                        <label class="label font-weight-bold">Total Geral</label>
                                        <input id="txtTotal" class="form-control form-control-xs" data-inputmask="'alias': 'currency'" style="text-align: right;" disabled />
                                    </div>
                                </div>
                            </div>
                            <div id="divVeiculosEdit" class="row" display="none">
                                <div class="col-4">
                                    <label class="label font-weight-bold">Selecione uma Repactuação para ver os Veículos</label>
                                    <span class="text-danger font-weight-light"></span>
                                    <select id="lstRepactuacao" name="lstRepactuacao" class="form-control form-control-xs">
                                        <option value="">-- Selecione uma Repactuacao --</option>
                                    </select>
                                </div>
                                <br />
                                <div>
                                    <ejs-grid id="grdVeiculos2" allowPaging="false" GridLines="Both">
                                        <e-grid-columns>
                                            <e-grid-column field="numitem" headerText="Item" textAlign="Center" width="20"></e-grid-column>
                                            <e-grid-column field="descricao" headerText="Descrição do Veículo" textAlign="Left" width="150"></e-grid-column>
                                            <e-grid-column field="quantidade" headerText="Quantidade" textAlign="Center" width="30" format="N0"></e-grid-column>
                                            <e-grid-column field="valorunitario" headerText="Valor Unitário" textAlign="Right" width="30" format="N2"></e-grid-column>
                                            <e-grid-column field="valortotal" headerText="Valor Total" width="30" textAlign="Right" format="N2"></e-grid-column>
                                        </e-grid-columns>
                                    </ejs-grid>
                                </div>
                                <div class="col-3">
                                    <div class="form-group">
                                        <label class="label font-weight-bold">Total Geral</label>
                                        <input id="txtTotalEdit" class="form-control form-control-xs" data-inputmask="'alias': 'currency'" style="text-align: right;" disabled />
                                    </div>
                                </div>
                            </div>
                            <br />

                            <br />
                            <div class="row">
                                <div class="col-12">
                                    <div class="form-group">
                                        <label class="label font-weight-bold">
                                            <input id="chkAtivo" type="checkbox" class="form-check-input" asp-for="AtaObj.AtaRegistroPrecos.Status" />
                                            Ativo/Inativo
                                        </label>
                                    </div>
                                    <br />
                                </div>
                            </div>
                            <div class="form-group row">
                                <div class="col-9">
                                    <div class="row">
                                        <div class="col-6">
                                            @if (Model.AtaObj.AtaRegistroPrecos.AtaId != Guid.Empty)
                                            {
                                                <button id="btnEdita" method="post" asp-page-handler="Edit" asp-route-id=@Model.AtaObj.AtaRegistroPrecos.AtaId class="btn btn-primary form-control">Atualizar</button>
                                            }
                                            else
                                            {
                                                <button id="btnAdiciona" type="submit" value="Submit" asp-page-handler="Submit" class="btn btn-primary form-control">Criar</button>
                                            }

                                        </div>
                                        <div class="col-6">
                                            <a asp-page="./Index" class="btn btn-success form-control">Voltar à Lista</a>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</form>

@section ScriptsBlock
{

    <script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/js/toastr.min.js"></script>

    <script>
        $(document).ready(function () {
            $("#valor").on("input", function () {
                // allow numbers, a comma or a dot
                var v = $(this).val(), vc = v.replace(/[^0-9,\.]/, '');
                if (v !== vc)
                    $(this).val(vc);
            });
        });
    </script>




    <script>


    @*/**
            * Number.prototype.format(n, x, s, c)
            *
            * @param integer n: length of decimal
            * @param integer x: length of whole part
            * @param mixed   s: sections delimiter
            * @param mixed   c: decimal delimiter
            **/*@
    Number.prototype.format = function(n, x, s, c) {
        var re = '\\d(?=(\\d{' + (x || 3) + '})+' + (n > 0 ? '\\D' : '$') + ')',
            num = this.toFixed(Math.max(0, ~~n));

        return (c ? num.replace('.', c) : num).replace(new RegExp(re, 'g'), '$&' + (s || ','));
    };


    //Controla Exibição do Tipo de Ata
    //================================
    $(document).ready(function ()
    {

        document.getElementById("divVeiculosAdd").style.display = "none"
        document.getElementById("divVeiculosEdit").style.display = "none"

        if ('@Model.AtaObj.AtaRegistroPrecos.AtaId' != null && '@Model.AtaObj.AtaRegistroPrecos.AtaId' != '00000000-0000-0000-0000-000000000000') {


            //Formata valor do contrato
            document.getElementById("valor").value = parseFloat(('@Model.AtaObj.AtaRegistroPrecos.Valor').replace(",", ".")).format(2, 3, '.', ',');

            //Pega ID do Contrato
            var AtaId = '@Model.AtaObj.AtaRegistroPrecos.AtaId'

            document.getElementById("divVeiculosEdit").style.display = "block"
            var gridObj = document.getElementById('grdVeiculos').ej2_instances[0] //Grid Instance
            gridObj.element.classList.add('disable-element');

            //Preenche a Lista de Repactuações
            $.ajax({
                url: "api/AtaRegistroPrecos/RepactuacaoList",
                method: "GET",
                data: { id: AtaId },
                success: function (res) {
                    var option = '<option>-- Selecione uma Repactuação --</option>';

                    if (res != null && res.data.length) {

                        res.data.forEach(function (obj) {
                            option += '<option value="' + obj.repactuacaoAtaId + '">';
                            option += obj.repactuacao;
                            option += '</option>';
                        });
                    }
                    console.log(option);
                    $('#lstRepactuacao').empty().append(option);
                }
            })
        }
        else
        {
            document.getElementById("divVeiculosAdd").style.display = "block"
            document.getElementById("chkAtivo").checked = true
        }

    });


    $("#btnAdiciona").click(function (event) {

        event.preventDefault();

        InsereRegistro();

    });

    $("#btnEdita").click(function (event) {

        event.preventDefault();

        InsereRegistro();

    });


    function InsereRegistro() {

        if (document.getElementById("txtAno").value === "") {
            swal({
                title: "Informação Ausente",
                text: "O ano da Ata é obrigatório",
                icon: "error",
                buttons: true,
                dangerMode: true,
                buttons: {
                    ok: "Ok"
                }
            })
            return;
        }

        if (document.getElementById("txtNumeroAta").value === "") {
            swal({
                title: "Informação Ausente",
                text: "O número da Ata é obrigatório",
                icon: "error",
                buttons: true,
                dangerMode: true,
                buttons: {
                    ok: "Ok"
                }
            })
            return;
        }

        if (document.getElementById("txtNumeroProcesso").value === "") {
            swal({
                title: "Informação Ausente",
                text: "O número do processo é obrigatório",
                icon: "error",
                buttons: true,
                dangerMode: true,
                buttons: {
                    ok: "Ok"
                }
            })
            return;
        }

        if (document.getElementById("txtAnoProcesso").value === "") {
            swal({
                title: "Informação Ausente",
                text: "O ano do processo é obrigatório",
                icon: "error",
                buttons: true,
                dangerMode: true,
                buttons: {
                    ok: "Ok"
                }
            })
            return;
        }

        if (document.getElementById("AtaObj_AtaRegistroPrecos_FornecedorId").value === "") {
            swal({
                title: "Informação Ausente",
                text: "O fornecedor da Ata é obrigatório",
                icon: "error",
                buttons: true,
                dangerMode: true,
                buttons: {
                    ok: "Ok"
                }
            })
            return;
        }

        if (document.getElementById("txtObjeto").value === "") {
            swal({
                title: "Informação Ausente",
                text: "O objeto do contrato é obrigatório",
                icon: "error",
                buttons: true,
                dangerMode: true,
                buttons: {
                    ok: "Ok"
                }
            })
            return;
        }

        if (document.getElementById("txtDataInicio").value === "") {
            swal({
                title: "Informação Ausente",
                text: "A data de início do contrato é obrigatória",
                icon: "error",
                buttons: true,
                dangerMode: true,
                buttons: {
                    ok: "Ok"
                }
            })
            return;
        }

        if (document.getElementById("txtDataFim").value === "") {
            swal({
                title: "Informação Ausente",
                text: "A data de fim da Ata é obrigatória",
                icon: "error",
                buttons: true,
                dangerMode: true,
                buttons: {
                    ok: "Ok"
                }
            })
            return;
        }

        if (document.getElementById("valor").value === "") {
            swal({
                title: "Informação Ausente",
                text: "O valor da Ata é obrigatório",
                icon: "error",
                buttons: true,
                dangerMode: true,
                buttons: {
                    ok: "Ok"
                }
            })
            return;
        }

        var gridObj = document.getElementById('grdVeiculos').ej2_instances[0] //Grid Instance
        var getRows = gridObj.getRows(); //get the grid rows by invoking getRows() method

        if (getRows.length === 0 && ('@Model.AtaObj.AtaRegistroPrecos.AtaId' === null || '@Model.AtaObj.AtaRegistroPrecos.AtaId' === '00000000-0000-0000-0000-000000000000')) {
            swal({
                title: "Informação Ausente",
                text: "Você deve informar ao menos um veículo.",
                icon: "error",
                buttons: true,
                dangerMode: true,
                buttons: {
                    ok: "Ok"
                }
            })
            return;
        }


        //----------------- Adiciona ATA Nova -----------------------
        //===========================================================
        if ('@Model.AtaObj.AtaRegistroPrecos.AtaId' === null || '@Model.AtaObj.AtaRegistroPrecos.AtaId' === '00000000-0000-0000-0000-000000000000') {


            //Ajusta valor numérico do Valor do Contrato
            //-------------------------------------------
            var valorata = $('#valor').val().replace('.', '');
            valorata = valorata.replace('.', '');
            valorata = valorata.replace('.', '');
            valorata = valorata.replace('.', '');
            valorata = valorata.replace(',', '.');

            var objAta = JSON.stringify({
                "AnoAta": $('#txtAno').val(),
                "NumeroAta": $('#txtNumeroAta').val(),
                "NumeroProcesso": $('#txtNumeroProcesso').val(),
                "AnoProcesso": $('#txtAnoProcesso').val(),
                "FornecedorId": $('#AtaObj_AtaRegistroPrecos_FornecedorId').val(),
                "Objeto": $('#txtObjeto').val(),
                "DataInicio": $('#txtDataInicio').val(),
                "DataFim": $('#txtDataFim').val(),
                "Valor": valorata,
                "Status": document.getElementById("chkAtivo").checked
            })

            console.log(objAta);
            //return;

            $.ajax({
                type: "post",
                url: "api/AtaRegistroPrecos/InsereAta",
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                data: objAta,

                success: function (data) {

                    var RepactuacaoId = data.data;

                    console.log("RepactuaçãoID: " + RepactuacaoId);

                    return;

                    //debugger;

                    var gridObj = document.getElementById('grdVeiculos').ej2_instances[0] //Grid Instance
                    var getRows = gridObj.getRows(); //get the grid rows by invoking getRows() method

                    for (var i = 0; i < getRows.length; i++) {

                        //Ajusta valor numérico do Valor Unitário
                        //-------------------------------------------
                        var valorunitario = (gridObj.getRows()[i].cells[3].innerHTML).replace('.', '');
                        valorunitario = valorunitario.replace('.', '');
                        valorunitario = valorunitario.replace('.', '');
                        valorunitario = valorunitario.replace('.', '');
                        valorunitario = valorunitario.replace(',', '.');

                        var objItemAta = JSON.stringify({
                            "NumItem": gridObj.getRows()[i].cells[0].innerHTML,
                            "Descricao": gridObj.getRows()[i].cells[1].innerHTML,
                            "Quantidade": gridObj.getRows()[i].cells[2].innerHTML,
                            "ValorUnitario": valorunitario,
                            "RepactuacaoAtaId": RepactuacaoId
                        })

                        console.log(objItemAta);

                        $.ajax({
                            type: "post",
                            url: "api/AtaRegistroPrecos/InsereItemAta",
                            contentType: "application/json; charset=utf-8",
                            dataType: "json",
                            data: objItemAta,
                            success: function (data) {
                            }
                        });
                    }
                    location.replace("/ataregistroprecos");
                    toastr.success("Ata Adicionada com Sucesso!");
                },
                error: function (data) {
                    toastr.error(data.message);
                    console.log(data);
                }
            });
        }
        else
        {
        //----------------- Edita Ata Existente ---------------------
        //================================================================

            //Ajusta valor numérico do Valor da Ata
            //-------------------------------------------
            var valorata = $('#valor').val().replace('.', '');
            valorata = valorata.replace('.', '');
            valorata = valorata.replace('.', '');
            valorata = valorata.replace('.', '');
            valorata = valorata.replace(',', '.');

            var objAta = JSON.stringify({
                "AtaId": '@Model.AtaObj.AtaRegistroPrecos.AtaId',
                "AnoAta": $('#txtAno').val(),
                "NumeroAta": $('#txtNumeroAta').val(),
                "NumeroProcesso": $('#txtNumeroProcesso').val(),
                "AnoProcesso": $('#txtAnoProcesso').val(),
                "FornecedorId": $('#AtaObj_AtaRegistroPrecos_FornecedorId').val(),
                "Objeto": $('#txtObjeto').val(),
                "DataInicio": $('#txtDataInicio').val(),
                "DataFim": $('#txtDataFim').val(),
                "Valor": valorata,
                "Status": document.getElementById("chkAtivo").checked
            })

            console.log(objAta);

            $.ajax({
                type: "post",
                url: "api/AtaRegistroPrecos/EditaAta",
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                data: objAta,

                success: function (data) {

                    location.replace("/ataregistroprecos");
                    toastr.success("Ata Adicionadaa com Sucesso!");

                },
                error: function (data) {
                    toastr.error(data.message);
                    console.log(data);
                }
            });

        }
   }


    </script>

    <script>

        function moeda(a, e, r, t) {
            let n = ""
                , h = j = 0
                , u = tamanho2 = 0
                , l = ajd2 = ""
                , o = window.Event ? t.which : t.keyCode;
            if (13 == o || 8 == o)
                return !0;
            if (n = String.fromCharCode(o),
                -1 == "0123456789".indexOf(n))
                return !1;
            for (u = a.value.length,
                h = 0; h < u && ("0" == a.value.charAt(h) || a.value.charAt(h) == r); h++)
                ;
            for (l = ""; h < u; h++)
                -1 != "0123456789".indexOf(a.value.charAt(h)) && (l += a.value.charAt(h));
            if (l += n,
                0 == (u = l.length) && (a.value = ""),
                1 == u && (a.value = "0" + r + "0" + l),
                2 == u && (a.value = "0" + r + l),
                u > 2) {
                for (ajd2 = "",
                    j = 0,
                    h = u - 3; h >= 0; h--)
                    3 == j && (ajd2 += e,
                        j = 0),
                        ajd2 += l.charAt(h),
                        j++;
                for (a.value = "",
                    tamanho2 = ajd2.length,
                    h = tamanho2 - 1; h >= 0; h--)
                    a.value += ajd2.charAt(h);
                a.value += r + l.substr(u - 2, u)
            }
            return !1
        }
    </script>

    <script>
        document.addEventListener('DOMContentLoaded', function () {

            loadCultureFiles('pt');
            ej.base.setCulture('pt');
            ej.base.setCurrencyCode('BRL');

            ej.base.L10n.load({
                'pt': {
                    "grid": {
                        "EmptyRecord": "Não há registros a serem exibidos",
                        "True": "verdade",
                        "False": "falso",
                        "InvalidFilterMessage": "Dados de filtro inválidos",
                        "GroupDropArea": "Arraste um cabeçalho de coluna aqui para agrupar sua coluna",
                        "UnGroup": "Clique aqui para desagrupar",
                        "GroupDisable": "O agrupamento está desativado para esta coluna",
                        "FilterbarTitle": "célula da barra de filtro",
                        "EmptyDataSourceError": "O DataSource não deve estar vazio no carregamento inicial, pois as colunas são geradas a partir do dataSource no AutoGenerate Column Grid",
                        "Add": "Adicionar",
                        "Edit": "Editar",
                        "Cancel": "Cancelar",
                        "Update": "Atualizar",
                        "Delete": "Excluir",
                        "Print": "Impressão",
                        "Pdfexport": "Exportação de PDF",
                        "Excelexport": "Exportação Excel",
                        "Wordexport": "Exportação de palavras",
                        "Csvexport": "Exportação de CSV",
                        "Search": "Procurar",
                        "Columnchooser": "Colunas",
                        "Save": "Salve ",
                        "Item": "item",
                        "Items": "Itens",
                        "EditOperationAlert": "Nenhum registro selecionado para operação de edição",
                        "DeleteOperationAlert": "Nenhum registro selecionado para operação de exclusão",
                        "SaveButton": "Salve ",
                        "OKButton": "Está bem",
                        "CancelButton": "Cancelar",
                        "EditFormTitle": "Detalhes de",
                        "AddFormTitle": "Adicionar novo registro",
                        "BatchSaveConfirm": "Tem certeza de que deseja salvar as alterações?",
                        "BatchSaveLostChanges": "Alterações não salvas serão perdidas. Você tem certeza que quer continuar?",
                        "ConfirmDelete": "Tem certeza de que deseja excluir o registro?",
                        "CancelEdit": "Tem certeza de que deseja cancelar as alterações?",
                        "ChooseColumns": "Escolher coluna",
                        "SearchColumns": "colunas de pesquisa",
                        "Matchs": "Nenhuma equivalência encontrada",
                        "FilterButton": "Filtro",
                        "ClearButton": "Claro",
                        "StartsWith": "Começa com",
                        "EndsWith": "Termina com",
                        "Contains": "Contém",
                        "Equal": "Igual",
                        "NotEqual": "Não igual",
                        "LessThan": "Menor que",
                        "LessThanOrEqual": "Menor ou igual",
                        "GreaterThan": "Maior que",
                        "GreaterThanOrEqual": "Maior que ou igual",
                        "ChooseDate": "Escolha uma data",
                        "EnterValue": "Digite o valor",
                        "Copy": "cópia de",
                        "Group": "Agrupar por esta coluna",
                        "Ungroup": "Desagrupar por esta coluna",
                        "autoFitAll": "Ajustar automaticamente a todas as colunas",
                        "autoFit": "Ajustar automaticamente a esta coluna",
                        "Export": "Exportação",
                        "FirstPage": "Primeira página",
                        "LastPage": "Última página",
                        "PreviousPage": "Página anterior",
                        "NextPage": "Próxima página",
                        "SortAscending": "Ordernar ascendente",
                        "SortDescending": "Classificar em ordem decrescente",
                        "EditRecord": "Editar registro",
                        "DeleteRecord": "Apagar registro",
                        "FilterMenu": "Filtro",
                        "SelectAll": "Selecionar tudo",
                        "Blanks": "Espaços em branco",
                        "FilterTrue": "Verdade",
                        "FilterFalse": "Falso",
                        "NoResult": "Nenhuma equivalência encontrada",
                        "ClearFilter": "Filtro limpo",
                        "NumberFilter": "Filtros numéricos",
                        "TextFilter": "Filtros de texto",
                        "DateFilter": "Filtros de data",
                        "DateTimeFilter": "Filtros DateTime",
                        "MatchCase": "Caso de compatibilidade",
                        "Between": "Entre",
                        "CustomFilter": "Filtro customizado",
                        "CustomFilterPlaceHolder": "Digite o valor",
                        "CustomFilterDatePlaceHolder": "Escolha uma data",
                        "AND": "E",
                        "OR": "OU",
                        "ShowRowsWhere": "Mostrar linhas onde:"
                    },
                    "pager": {
                        "currentPageInfo": "{0} de {1} páginas",
                        "totalItemsInfo": "({0} itens)",
                        "firstPageTooltip": "Ir para a primeira página",
                        "lastPageTooltip": "Ir para a última página",
                        "nextPageTooltip": "Ir para a próxima página",
                        "previousPageTooltip": "Ir para a página anterior",
                        "nextPagerTooltip": "Ir para o próximo pager",
                        "previousPagerTooltip": "Ir para o pager anterior",
                        "pagerDropDown": "itens por página",
                        "pagerAllDropDown": "Itens",
                        "All": "Todos",
                        "totalItemInfo": "({0} item)"
                    }
                }
            });
        });

        function loadCultureFiles(name) {

            var files = ['ca-gregorian.json', 'numbers.json', 'currencies.json', 'timeZoneNames.json'];
            if (name === 'pt') {
                files.push('numberingSystems.json');
            }
            var loader = ej.base.loadCldr;
            var loadCulture = function (prop) {
                var val, ajax;
                if (name === 'pt' && prop === files.length - 1) {
                    ajax = new ej.base.Ajax(location.origin + location.pathname + '/../../js/cldr-data/supplemental/' + files[prop], 'GET', false);
                }
                else {
                    ajax = new ej.base.Ajax(location.origin + location.pathname + '/../../js/cldr-data/main/' + name + '/' + files[prop], 'GET', false);
                }
                ajax.onSuccess = function (value) {
                    val = value;
                    loader(JSON.parse(val));
                };
                ajax.send();

            };
            for (var prop = 0; prop < files.length; prop++) {
                loadCulture(prop);
            }
        }


        //Coloca os registros inseridos no fim da tabela
        //----------------------------------------------
        function actionComplete(args) {
            if (args.requestType == "save") {
                var gridObj = document.getElementById('grdVeiculos').ej2_instances[0] //Grid Instance

                gridObj.dataSource.shift();// Remove the newly added record from first position
                gridObj.dataSource.push(args.data)// Push the newly added record in data source
                gridObj.refresh();
            }
        }


        //Calcula o valor da coluna TOTAL
        //-------------------------------
        function calculate(args) {

            //debugger;


            var valorunitario = args.data.valorunitario;

            var quantidade = args.data.quantidade;

            valorunitario = (valorunitario).replace(',', '.');

            var valortotal = valorunitario * quantidade;

            valortotal = (valortotal).toString().replace('.', ',');

            if (args.column.headerText == "Valor Total") {
                $(args.cell).text(valortotal);
            }


            var gridObj = document.getElementById('grdVeiculos').ej2_instances[0] //Grid Instance
            var getRows = gridObj.getRows(); //get the grid rows by invoking getRows() method
            var valortotalgrid = 0;

            for (var i = 0; i < getRows.length; i++) {

                var qtd = gridObj.getRows()[i].cells[2].innerHTML;
                var val = gridObj.getRows()[i].cells[3].innerHTML;

                valortotalgrid = valortotalgrid + (val.replace(',', '.') * qtd);

            }

            var valortotalgeral = Number((valortotal).toString().replace(',', '.')) + valortotalgrid
            valortotalgeral = (valortotalgeral).toString().replace('.', ',')
            $("#txtTotal").val(valortotalgeral);



        }

        //Preenche Grid Veículos Baseado na Repactuação
        //=============================================
        document.getElementById("lstRepactuacao").addEventListener("change", function () {

            RepactuacaoAtaId = document.getElementById("lstRepactuacao").value;

            var grid = document.getElementById('grdVeiculos2').ej2_instances[0]; // Grid instance

            $.ajax({
                url: 'api/GridAta/DataSourceAta',
                type: "GET",
                success: function (res) {
                    console.log(res);

                    objItens = res;

                    objItens = objItens.filter(function (obj) {
                        return obj.repactuacaoId === RepactuacaoAtaId;
                    });

                    grid.dataSource = objItens;

                    var valortotal = 0;
                    var arrayLength = objItens.length;
                    for (var i = 0; i < arrayLength; i++) {
                        console.log(objItens[i].valortotal);

                        valortotal = valortotal + objItens[i].valortotal;
                        //Do something
                    }

                    // $("#txtTotalEdit").val(valortotal.toString().format(2, 3, '.', ','));

                    //debugger;

                    document.getElementById("txtTotalEdit").value = (valortotal).toLocaleString()



                },
                error: function (err) {
                    console.log(err)
                    alert('something went wrong')
                }
            });

        })


    </script>


}
